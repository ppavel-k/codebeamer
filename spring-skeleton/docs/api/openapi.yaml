openapi: 3.0.1
info:
  contact:
    name: codeBeamer
    url: https://codebeamer.com
  description: ""
  title: codebeamer swagger API
  version: "3.0"
externalDocs:
  description: Swagger V3 Examples
  url: https://codebeamer.com/cb/wiki/11375767
servers:
- url: http://b245d5c6e384:8080/api
security:
- BasicAuth: []
  BearerAuth: []
  ApiKeyAuth: []
paths:
  /v3/migration/attachment:
    post:
      description: An endpoint for migrating attachments from a preconfigured source
        directory.
      operationId: migrateAttachments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentMigrationRequest'
      responses:
        "200":
          description: Attachments are migrated
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          description: Access denied
        "400":
          description: Bad request
        "401":
          description: Authentication is required
      summary: Migrate attachments
      tags:
      - Migration
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{trackerId}/fields/{fieldId}:
    get:
      operationId: getTrackerField
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: fieldId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractField'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractField'
          description: Field by id
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractField'
          description: Field not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractField'
          description: Authentication is required
      summary: Get field of tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/schema:
    get:
      operationId: getTrackerSchema
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractField'
                type: array
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractField'
                type: array
          description: Field definitions
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractField'
                type: array
          description: Field not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractField'
                type: array
          description: Authentication is required
      summary: Get the schema of a tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/fields/{fieldId}/permissions:
    get:
      operationId: getTrackerFieldPermissions
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: fieldId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: statusId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerFieldStatusPermissions'
                type: array
          description: Tracker or field not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerFieldStatusPermissions'
                type: array
          description: Permissions by status and role
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerFieldStatusPermissions'
                type: array
          description: Authorization is required
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerFieldStatusPermissions'
                type: array
          description: Status id is invalid
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerFieldStatusPermissions'
                type: array
          description: Authentication is required
      summary: Get permissions of tracker field
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/fields/permissions:
    get:
      operationId: getTrackerFieldsPermissions
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: statusId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerFieldsStatusPermissions'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerFieldsStatusPermissions'
          description: Permissions by status and role
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerFieldsStatusPermissions'
          description: Authorization is required
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerFieldsStatusPermissions'
          description: Status id is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerFieldsStatusPermissions'
          description: Authentication is required
      summary: Get permissions of all fields of a tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/fields:
    get:
      operationId: getTrackerFields
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FieldReference'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FieldReference'
                type: array
          description: Field not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FieldReference'
                type: array
          description: Field references
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FieldReference'
                type: array
          description: Authentication is required
      summary: Get fields of tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/items/{itemId}/children:
    get:
      operationId: findTrackerItemChildren
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: List child items of a tracker item ordered by ordinal
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker item is not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Get child items of a tracker item
      tags:
      - Tracker item
      x-accepts: application/json
    patch:
      operationId: patchChildrenOfTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: mode
        required: true
        schema:
          enum:
          - INSERT
          - REPLACE
          - REMOVE
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemChildReference'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemChildReference'
          description: New child item reference on the requested index
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker item is not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Patch the child item list of a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: addChildToTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemRevision'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemChildReference'
          description: Child item reference with index
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker item is not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Add a child item to a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: replaceChildrenOfTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Number of items in the result page. Max value: 500"
        explode: true
        in: query
        name: resultPageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackerItemChildrenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: First page of the new child list
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker item is not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Replace the child item list of a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{trackerId}/children:
    get:
      operationId: findTrackerChildren
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: List child items of a tracker item ordered by ordinal
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Get child items of a tracker item
      tags:
      - Tracker item
      x-accepts: application/json
    patch:
      operationId: patchChildrenOfTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          default: INSERT
          enum:
          - INSERT
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemChildReference'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemChildReference'
          description: New child item reference on the requested index
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Patch the child item list of a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: addChildToTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemRevision'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemChildReference'
          description: Child item reference with index
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Add a child item to a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: replaceChildrenOfTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Number of items in the result page. Max value: 500"
        explode: true
        in: query
        name: resultPageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackerItemChildrenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: First page of the new child list
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Permission is required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Reorder the child item list of a tracker
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/comments:
    delete:
      operationId: deleteTrackerItemComments
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          description: Authentication is required
        "404":
          description: Tracker item not found
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          description: Comments deleted
      summary: Delete comments of tracker item by item id
      tags:
      - Tracker item's comment
      x-accepts: '*/*'
    get:
      operationId: getTrackerItemComments
      parameters:
      - description: Id of a tracker item
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Comments of tracker item by id
      summary: Get comments of tracker item
      tags:
      - Tracker item's comment
      x-accepts: application/json
    post:
      operationId: commentOnTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostComment'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment of tracker item by id
      summary: Comment on a tracker item
      tags:
      - Tracker item's comment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/items/{itemId}/comments/{commentId}:
    delete:
      operationId: deleteTrackerItemComment
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment of tracker item by id
      summary: Delete comment of tracker item by id
      tags:
      - Tracker item's comment
      x-accepts: application/json
    get:
      operationId: getTrackerItemComment
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment of tracker item by id
      summary: Get comment of tracker item by id
      tags:
      - Tracker item's comment
      x-accepts: application/json
    post:
      operationId: replyOnCommentOfTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostComment'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Comment of tracker item by id
      summary: Reply on a comment of a tracker item
      tags:
      - Tracker item's comment
      x-content-type: multipart/form-data
      x-accepts: application/json
    put:
      operationId: editCommentOnTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: commentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditComment'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Edited comment
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Tracker not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Unexpected error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Edit comment on a tracker item
      tags:
      - Tracker item's comment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/attachments/{attachmentId}:
    delete:
      operationId: deleteAttachment
      parameters:
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Attachment deleted
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Attachment not found
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Access denied
      summary: Deletes an attachment
      tags:
      - Attachment
      x-accepts: '*/*'
    get:
      operationId: getAttachment
      parameters:
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment by id
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authorization is required
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Tracker / Attachment not found
      summary: Get attachment by id
      tags:
      - Attachment
      x-accepts: application/json
  /v3/attachments/{attachmentId}/history:
    get:
      operationId: getAttachmentHistory
      parameters:
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Attachment history
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Attachment not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Access denied
      summary: Returns the change history of the specified attachment
      tags:
      - Attachment
      x-accepts: application/json
  /v3/attachments/{attachmentId}/content:
    get:
      operationId: getAttachmentContent
      parameters:
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "429":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: Authorization is required
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
          description: Attachment by id
        "401":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: Authentication is required
        "404":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ModelAndView'
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: Tracker / Attachment not found
      summary: Get content of an attachment by id
      tags:
      - Attachment
      x-accepts: application/json
    put:
      operationId: updateAttachment
      parameters:
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateAttachment'
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Unexpected error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Updated attachment
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authorization is required
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment not found
      summary: Update attachment
      tags:
      - Attachment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/attachments/{attachmentId}/restore:
    put:
      operationId: restoreAttachment
      parameters:
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: version
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Unexpected error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authorization is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Restored attachment
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment not found
      summary: Restore attachment to previous version
      tags:
      - Attachment
      x-accepts: application/json
  /v3/deployment:
    post:
      operationId: uploadDeployment
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeploymentModel'
      responses:
        "403":
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          description: Bad request
        "401":
          description: Authentication is required
        "200":
          description: Deployment is executed
      summary: Start a deployment process
      tags:
      - Deployment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/deployment/export:
    post:
      operationId: exportForDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportForDeploymentRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobReference'
          description: Export job has been scheduled successfully
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobReference'
          description: Authorization is required
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobReference'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobReference'
          description: Authentication is required
      summary: Export projects for deployment
      tags:
      - Deployment
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/relations:
    post:
      description: API can be used for fetching basic information of tracker items
        at a specific baseline version
      operationId: getBaselineTrackerItemsRelations
      parameters:
      - explode: true
        in: query
        name: baselineId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemsRequest'
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemRelationsResult'
                type: array
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemRelationsResult'
                type: array
          description: Tracker item list
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemRelationsResult'
                type: array
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get tracker items for a baseline version
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/relations:
    get:
      description: API can be used for fetching basic information of tracker items
        at a specific baseline version
      operationId: getBaselineTrackerItemRelations
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: baselineId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemRelationsResult'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemRelationsResult'
          description: Tracker item list
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemRelationsResult'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get tracker items for a baseline version
      tags:
      - Tracker item
      x-accepts: application/json
  /v3/items/attachments/content:
    post:
      operationId: getTrackerItemsAttachmentContents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemAttachmentRequest'
      responses:
        "403":
          description: Authentication is required
        "429":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          description: Bad request
        "404":
          description: Tracker items not found
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: "Attachments of tracker items: each tracker item goes to a\
            \ subdirectory named as item-id and this directory contains the attachment\
            \ files prefixed with the attachment id like [attachment-id]_[filename]."
      summary: Get attachments of tracker items matching the extension or mime type
        filters
      tags:
      - Tracker item's attachment
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/attachments:
    delete:
      operationId: deleteTrackerItemAttachments
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          description: Authentication is required
        "200":
          description: Attachments of tracker item removed
        "404":
          description: Tracker not found
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Delete attachments of tracker item
      tags:
      - Tracker item's attachment
      x-accepts: '*/*'
    get:
      operationId: getTrackerItemAttachments
      parameters:
      - description: Id of the tracker item
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Filter by part of the filename of the attachments
        explode: true
        in: query
        name: fileName
        required: false
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentSearchResult'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentSearchResult'
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentSearchResult'
          description: Attachments of tracker item
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentSearchResult'
          description: Access denied
      summary: Get attachments of tracker item
      tags:
      - Tracker item's attachment
      x-accepts: application/json
    post:
      operationId: updloadTrackerItemAttachment
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadAttachment'
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: Attachment of tracker item by id
      summary: Upload an attachment to a tracker item
      tags:
      - Tracker item's attachment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/items/{itemId}/attachments/content:
    get:
      operationId: getTrackerItemAttachmentContents
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          description: Authentication is required
        "404":
          description: Tracker item not found
        "429":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: "Attachments of a tracker item: contains the attachment files\
            \ prefixed with the attachment id like [attachment-id]_[filename]."
        "400":
          description: Bad request
      summary: Get attachments of a tracker item
      tags:
      - Tracker item's attachment
      x-accepts: application/json
  /v3/items/{itemId}/attachments/{attachmentId}:
    delete:
      operationId: deleteTrackerItemAttachment
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment of tracker item by id
      summary: Delete attachment of tracker item by id
      tags:
      - Tracker item's attachment
      x-accepts: application/json
    get:
      operationId: getTrackerItemAttachment
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment of tracker item by id
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Tracker / Attachment not found
      summary: Get attachment of tracker item by id
      tags:
      - Tracker item's attachment
      x-accepts: application/json
  /v3/items/{itemId}/attachments/{attachmentId}/content:
    get:
      operationId: getTrackerItemAttachmentContent
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: Authentication is required
        "429":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Attachment of tracker item by id
        "404":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ModelAndView'
          description: Tracker / Attachment not found
      summary: Get content of an attachment of tracker item by id
      tags:
      - Tracker item's attachment
      x-accepts: application/octet-stream
    put:
      operationId: updateAttachmentOfTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateAttachment'
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Tracker item or attachment not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Unexpected error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Updated attachment
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authorization is required
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
      summary: Update content of attachment of tracker item
      tags:
      - Tracker item's attachment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/baselines:
    post:
      operationId: createBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBaselineRequest'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
          description: Baseline created successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required or user has no permission
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Project or tracker not found
      summary: Create a project or tracker baseline
      tags:
      - Baseline
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/permissions:
    get:
      operationId: getTrackerPermissions
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerPermissionReference'
                type: array
          description: Authentication is required.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerPermissionReference'
                type: array
          description: Tracker permissions.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerPermissionReference'
                type: array
          description: Tracker permission is not found.
      summary: Get available tracker permissions
      tags:
      - Tracker permission
      x-accepts: application/json
  /v3/trackers/permissions/{trackerPermissionId}:
    get:
      operationId: getTrackerPermission
      parameters:
      - explode: false
        in: path
        name: trackerPermissionId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerPermission'
          description: Authentication is required.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerPermission'
          description: Tracker permission.
      summary: Get the immutable definition of a tracker permission
      tags:
      - Tracker permission
      x-accepts: application/json
  /v3/trackers/{trackerId}/permissions:
    get:
      description: "API can be used to list tracker permissions per roles, filtering\
        \ is possible by user, user and on of the user's role, or just by role"
      operationId: getTrackerPermissionsWithRoles
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: roleId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: Authentication is required.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: Tracker is not found.
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: Tracker permissions by role.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: No access permission for this resource
      summary: List tracker permissions per role
      tags:
      - Tracker permission
      x-accepts: application/json
  /v3/trackers/{trackerId}/roles/{roleId}/permissions:
    delete:
      operationId: removePermissions
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          description: Authentication is required
        "404":
          description: Tracker/role is not found
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          description: Tracker permissions were removed.
      summary: Removes all tracker permissions from a specific role
      tags:
      - Tracker permission
      x-accepts: '*/*'
    put:
      operationId: updatePermission
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionIdsRequest'
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: Tracker permissions are set
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleWithPermissions'
                type: array
          description: Tracker / permission / roles not found
      summary: Set the tracker permissions for a specific role
      tags:
      - Tracker permission
      x-content-type: application/json
      x-accepts: application/json
  /v3/reports/{reportId}/items:
    get:
      operationId: getReportItemsById
      parameters:
      - description: Id of a report
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of a report page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items a report page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportItemResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportItemResult'
          description: Report not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportItemResult'
          description: Report items by id
      summary: Get a report items by id of the report
      tags:
      - Report
      x-accepts: application/json
  /v3/reports/{reportId}/results:
    get:
      operationId: getReportById
      parameters:
      - description: Id of a report
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of a report page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items a report page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: Report not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: Report content by id
      summary: Get a report results by id of the report
      tags:
      - Report
      x-accepts: application/json
  /v3/reports/{reportId}:
    put:
      operationId: updateReport
      parameters:
      - description: Id of a report
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleReportSettings'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleReportSettings'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleReportSettings'
          description: Updated report settings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleReportSettings'
          description: Bad request
      summary: Update report settings
      tags:
      - Report
      x-content-type: application/json
      x-accepts: application/json
  /v3/reports:
    post:
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleReportSettings'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleReportSettings'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleReportSettings'
          description: Report settings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleReportSettings'
          description: Bad request
      summary: Create a report
      tags:
      - Report
      x-content-type: application/json
      x-accepts: application/json
  /v3/projects/{projectId}/members:
    get:
      operationId: getMembersOfProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberReferenceSearchResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberReferenceSearchResult'
          description: Project is not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberReferenceSearchResult'
          description: Member by id
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberReferenceSearchResult'
          description: Authentication is required
      summary: Get all members of a project
      tags:
      - Project
      x-accepts: application/json
  /v3/projects/{projectId}/members/{userId}/permissions:
    get:
      operationId: getProjectRolesOfMember
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberPermissions'
          description: Roles
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberPermissions'
          description: User is not a member of the project
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberPermissions'
          description: Authentication is required
      summary: Get all roles the user has on a project
      tags:
      - Project
      x-accepts: application/json
  /v3/users/{userId}:
    get:
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User not found
      summary: Get user
      tags:
      - User
      x-accepts: application/json
  /v3/users/findByEmail:
    get:
      operationId: getUserByEmail
      parameters:
      - explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User not found
      summary: Get user by email address
      tags:
      - User
      x-accepts: application/json
  /v3/users/findByName:
    get:
      operationId: getUserByName
      parameters:
      - explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User not found
      summary: Get user by name
      tags:
      - User
      x-accepts: application/json
  /v3/users/search:
    post:
      operationId: searchUsers
      parameters:
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFilteringRequest'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResult'
          description: Project is not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResult'
          description: Users
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResult'
          description: Bad request
      summary: Search users
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /v3/users:
    get:
      operationId: getUsers
      parameters:
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: groupId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - example: Intland
        explode: true
        in: query
        name: queryString
        required: false
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferenceSearchResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferenceSearchResult'
          description: Users
      summary: Get users
      tags:
      - User
      x-accepts: application/json
  /v3/items/{itemId}:
    delete:
      operationId: deleteTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Move tracker item to trash
      tags:
      - Tracker item
      x-accepts: application/json
    get:
      description: API can be used for fetching basic information of a tracker item
      operationId: getTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: baselineId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker item not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get basic tracker item
      tags:
      - Tracker item
      x-accepts: application/json
    put:
      externalDocs:
        description: Tracker item operations
        url: https://codebeamer.com/cb/wiki/11375769
      operationId: updateTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: referenceItemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: position
        required: false
        schema:
          enum:
          - BEFORE
          - AFTER
          - BELOW
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItem'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker / Field not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Request cannot be processed
      summary: Update tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/export/items:
    post:
      description: API can be used for fetching basic information of tracker items
      operationId: getTrackerItems
      parameters:
      - explode: true
        in: query
        name: baselineId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemsRequest'
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItem'
                type: array
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItem'
                type: array
          description: Tracker item list
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItem'
                type: array
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get tracker items
      tags:
      - Export
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{trackerId}/items:
    get:
      operationId: getItemsByTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: Request cannot be processed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemReferenceSearchResult'
          description: List of tracker items
      summary: Get items in a specific tracker
      tags:
      - Tracker
      x-accepts: application/json
    post:
      externalDocs:
        description: Tracker item operations
        url: https://codebeamer.com/cb/wiki/11375769
      operationId: createTrackerItem
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: parentItemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: referenceItemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: position
        required: false
        schema:
          enum:
          - BEFORE
          - AFTER
          - BELOW
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItem'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker / Field not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Request cannot be processed
      summary: Create a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/query:
    get:
      externalDocs:
        description: Documentation of cbQL
        url: https://codebeamer.com/cb/wiki/871101
      operationId: findTrackerItems
      parameters:
      - description: Baseline on which the queery is applied.
        explode: true
        in: query
        name: baselineId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      - example: priority='Normal'
        explode: true
        in: query
        name: queryString
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemSearchResult'
          description: List tracker items by cbQL
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemSearchResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemSearchResult'
          description: Request cannot be processed
      summary: Get tracker items by cbQL query string
      tags:
      - Tracker item
      x-accepts: application/json
    post:
      description: API can be called with a complex cbQL string to find tracker items
      externalDocs:
        description: Documentation of cbQL
        url: https://codebeamer.com/cb/wiki/871101
      operationId: findTrackerItemsByCbQL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerItemSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemSearchResult'
          description: List tracker items by cbQL
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemSearchResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemSearchResult'
          description: Request cannot be processed
      summary: Get tracker items by cbQL query string
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/transitions:
    get:
      description: API can be used for getting available transitions for a tracker
        item
      operationId: getTrackerItemTransitions
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Tracker item not found
        "500":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Internal server error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Available transitions
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Authentication is required
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Missing user permissions
      summary: Get available transitions for a tracker item
      tags:
      - Tracker item
      x-accepts: application/json
  /v3/items/{itemId}/fields:
    get:
      externalDocs:
        description: Tracker item operations
        url: https://codebeamer.com/cb/wiki/11375769
      operationId: getTrackerItemFields
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemField'
          description: Authentication is required
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemField'
          description: Unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemField'
          description: Fields of tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemField'
          description: Tracker / Item not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemField'
          description: Request cannot be processed
      summary: Get fields of a tracker item
      tags:
      - Tracker item
      x-accepts: application/json
    put:
      externalDocs:
        description: Tracker item operations
        url: https://codebeamer.com/cb/wiki/11375769
      operationId: updateCustomFieldTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: If it's turned on HTTP 200 with empty response indicates that
          the update was successful.
        explode: true
        in: query
        name: quietMode
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackerItemField'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker / Field not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Request cannot be processed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
      summary: Update fields of a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/fields:
    put:
      externalDocs:
        description: Tracker item operations
        url: https://codebeamer.com/cb/wiki/11375769
      operationId: bulkUpdateTrackerItemFields
      parameters:
      - description: If it's turned on the whole update will run in a single transaction.
        explode: true
        in: query
        name: atomic
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateTrackerItemFieldWithItemId'
              type: array
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
          description: Tracker / Field not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
          description: Unexpected error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
          description: Bulk update response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
          description: Request cannot be processed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
          description: Authentication is required
      summary: Bulk update fields of a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/fields/tables/{tableFieldId}:
    put:
      operationId: updateTableFieldTrackerItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: tableFieldId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackerItemTableField'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker / Field not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Request cannot be processed
      summary: Update table field of tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/history:
    get:
      description: API can be used for fetching basic information of a tracker item
      operationId: getTrackerItemHistory
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemHistory'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemHistory'
          description: Tracker not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemHistory'
          description: Basic tracker item by id
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get tracker item history
      tags:
      - Tracker item
      x-accepts: application/json
  /v3/branches/{branchId}/item:
    get:
      description: API can be used for finding a tracker item by a branch id
      operationId: getTrackerItemOnBranch
      parameters:
      - explode: true
        in: query
        name: sourceItemId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: branchId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Basic tracker item by id and branch id
      summary: Get tracker item on branch
      tags:
      - Branches
      x-accepts: application/json
  /v3/items/{itemId}/lock:
    delete:
      operationId: unlockTrackerItem
      parameters:
      - description: Tracker item id
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Unlock successful
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          description: Wiki page not found
        "401":
          description: Authentication is required
        "403":
          description: Could not unlock
      summary: Unlock a tracker item
      tags:
      - Tracker item
      x-accepts: application/json
    get:
      operationId: checkTrackerItemLock
      parameters:
      - description: Tracker item id
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockInfo'
          description: "Details of the lock, or an empty response"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockInfo'
          description: Wiki page not found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockInfo'
          description: Authentication is required
      summary: "Check whether a tracker item is locked, and if it is, retrieve the\
        \ details of the lock"
      tags:
      - Tracker item
      x-accepts: application/json
    put:
      operationId: lockTrackerItem
      parameters:
      - description: Tracker item id
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockRequest'
        description: Requested lock configuration
        required: false
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          description: Wiki page not found
        "403":
          description: Could not acquire lock
        "200":
          description: Lock acquired successfully
        "400":
          description: "Bad request, request validation error"
        "401":
          description: Authentication is required
      summary: Put a soft lock on a tracker item
      tags:
      - Tracker item
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/fields/accessibility:
    get:
      operationId: getItemAccessibility
      parameters:
      - description: Tracker item id
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: targetStatusId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemFieldAccessibilityList'
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemFieldAccessibilityList'
          description: Accessibility returned
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItemFieldAccessibilityList'
          description: Authentication is required
      summary: Get a tracker item fields accessibility
      tags:
      - Tracker item
      x-accepts: application/json
  /v3/system/maintenance:
    get:
      operationId: getSystemStatus
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Access denied
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
          description: System maintenance status
      summary: Get system maintenance status
      tags:
      - System
      x-accepts: application/json
    put:
      operationId: setSystemStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceMode'
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Request cannot be processed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Access denied
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
          description: System maintenance status
      summary: Set system maintenance status
      tags:
      - System
      x-content-type: application/json
      x-accepts: application/json
  /v3/projects:
    get:
      operationId: getProjects
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectReference'
                type: array
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectReference'
                type: array
          description: Project not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectReference'
                type: array
          description: Projects
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectReference'
                type: array
          description: Authentication is required
      summary: Get projects
      tags:
      - Project
      x-accepts: application/json
  /v3/projects/search:
    post:
      operationId: searchProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFilteringRequest'
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSearchResult'
          description: One page of projects
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSearchResult'
          description: Access denied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSearchResult'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSearchResult'
          description: Authentication is required
      summary: Search projects by given criteria
      tags:
      - Project
      x-content-type: application/json
      x-accepts: application/json
  /v3/projects/{projectId}/wikipages:
    get:
      operationId: getTopLevelWikiPages
      parameters:
      - description: ID of the project
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: The project does not exists
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Access denied
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiOutlineSearchResult'
          description: The list of wiki pages
      summary: Get wiki pages of a project
      tags:
      - Project
      x-accepts: application/json
  /v3/projects/{projectId}:
    get:
      operationId: getProjectById
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project not found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Authentication is required
      summary: Get project
      tags:
      - Project
      x-accepts: application/json
  /v3/projects/{projectId}/content:
    post:
      operationId: export
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportProject'
      responses:
        "403":
          description: Authentication is required
        "429":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "500":
          description: Error during the project export
        "404":
          description: Project not found
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: The exported project contents in a zip file.
        "400":
          description: Bad request
      summary: Exports the specified project to a zip file
      tags:
      - Export
      x-content-type: application/json
      x-accepts: application/json
  /v3/roles:
    get:
      operationId: getRoles
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleReference'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleReference'
                type: array
          description: Role not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleReference'
                type: array
          description: Roles
      summary: Get roles
      tags:
      - Role
      x-accepts: application/json
  /v3/roles/{roleId}:
    get:
      operationId: getRole
      parameters:
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Roles
      summary: Get role
      tags:
      - Role
      x-accepts: application/json
  /v3/associations/{associationId}:
    delete:
      operationId: deleteAssociation
      parameters:
      - explode: false
        in: path
        name: associationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Association not found
        "200":
          description: Delete association by id
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Delete association
      tags:
      - Association
      x-accepts: '*/*'
    get:
      operationId: getAssociation
      parameters:
      - explode: false
        in: path
        name: associationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Association not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          description: Found association
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Get an association by id
      tags:
      - Association
      x-accepts: application/json
    put:
      operationId: updateAssociation
      parameters:
      - explode: false
        in: path
        name: associationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Association'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          description: Updated association
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Association not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Update association settings
      tags:
      - Association
      x-content-type: application/json
      x-accepts: application/json
  /v3/associations/types/{associationTypeId}:
    get:
      operationId: getAssociationType
      parameters:
      - explode: false
        in: path
        name: associationTypeId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationType'
          description: Association type
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Association not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Get association type by id
      tags:
      - Association
      x-accepts: application/json
  /v3/associations:
    post:
      operationId: createAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Association'
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          description: Created association
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Create a new association
      tags:
      - Association
      x-content-type: application/json
      x-accepts: application/json
  /v3/associations/{associationId}/history:
    get:
      operationId: getAssociationHistory
      parameters:
      - explode: false
        in: path
        name: associationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Association not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Association history
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Authentication is required
      summary: Returns the change history of the specified association
      tags:
      - Association
      x-accepts: application/json
  /v3/associations/types:
    get:
      operationId: getAvailableAssociationTypes
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AssociationType'
                type: array
          description: List of association types
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authentication is required
      summary: Get available association types
      tags:
      - Association
      x-accepts: application/json
  /v3/testcases/autoApplyStepReuses:
    post:
      externalDocs:
        description: Detecting and automatically converting Test Step duplicates to
          Step-reuses
        url: https://codebeamer.com/cb/wiki/792788#section-Detecting+and+automatically+converting+Test+Step+duplicates+to+Step-reuses
      operationId: autoApplyStepReuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoApplyTestStepReuses'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemReference'
                type: array
          description: The item-references of the modified tracker-items where duplicate
            Test Steps was found and converted to Reuses
      summary: Find duplicate TestSteps in a set of TestCases and converting duplicates
        to Reuses
      tags:
      - Test Management
      x-content-type: application/json
      x-accepts: application/json
  /v3/testruns/{testRunId}:
    put:
      operationId: updateTestRunResult
      parameters:
      - explode: false
        in: path
        name: testRunId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestRunRequest'
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Authentication is required
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Request cannot be processed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: Updated Test Run item
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Access denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Test run not found
      summary: Update result of a Test Run
      tags:
      - Test run
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{testRunTrackerId}/testruns:
    post:
      description: "For multiple test sets please use trackers/{testRunTrackerId}/testruns/generatefromtestset\
        \ endpoint."
      operationId: createTestRunForTestCase
      parameters:
      - explode: false
        in: path
        name: testRunTrackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestRunRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerItem'
          description: The newly created test run
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: Internal server error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Authentication is required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authorization is required
      summary: Create a new test run for test cases or test sets
      tags:
      - Test run
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{testRunTrackerId}/testruns/generatefromtestset:
    post:
      operationId: createTestRunForTestSets
      parameters:
      - explode: false
        in: path
        name: testRunTrackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestRunFromTestSetsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRunResult'
          description: The newly created test run
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnauthorizedException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: Internal server error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Authentication is required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceForbiddenException'
          description: Authorization is required
      summary: Create a new test run for test cases or test sets
      tags:
      - Test run
      x-content-type: application/json
      x-accepts: application/json
  /v3/wikipages/{wikiId}:
    delete:
      operationId: deleteWikiPage
      parameters:
      - description: ID of the wiki page
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          description: Access denied
        "400":
          description: Request cannot be processed
        "200":
          description: The wiki page has been deleted successfully
        "401":
          description: Authentication is required
        "404":
          description: "The wiki page does not exist, or the artifact is not a wiki\
            \ page"
      summary: Delete a wiki page by its ID
      tags:
      - Wiki
      x-accepts: '*/*'
    get:
      operationId: getWikiPage
      parameters:
      - description: ID of the wiki page
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Version of the wiki page
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Access denied
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: The wiki page
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: "The wiki page does not exist, or the artifact is not a wiki\
            \ page"
      summary: Get wiki page
      tags:
      - Wiki
      x-accepts: application/json
  /v3/wikipages/{wikiId}/lock:
    delete:
      operationId: unlockWikiPage
      parameters:
      - description: Wiki page id
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Unlock successful
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          description: Wiki page not found
        "401":
          description: Authentication is required
        "403":
          description: Could not unlock
      summary: Unlock a wiki page
      tags:
      - Wiki
      x-accepts: application/json
    get:
      operationId: checkWikiPageLock
      parameters:
      - description: Wiki page id
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockInfo'
          description: "Details of the lock, or an empty response"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockInfo'
          description: Wiki page not found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockInfo'
          description: Authentication is required
      summary: "Check whether a wiki page is locked, and if it is, retrieve the details\
        \ of the lock"
      tags:
      - Wiki
      x-accepts: application/json
    put:
      operationId: lockWikiPage
      parameters:
      - description: Wiki page id
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockRequest'
        description: Requested lock configuration
        required: false
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          description: Wiki page not found
        "403":
          description: Could not acquire lock
        "200":
          description: Lock acquired successfully
        "400":
          description: "Bad request, request validation error"
        "401":
          description: Authentication is required
      summary: Lock a wiki page
      tags:
      - Wiki
      x-content-type: application/json
      x-accepts: application/json
  /v3/wikipages/{wikiId}/history:
    get:
      operationId: getWikiPageHistory
      parameters:
      - explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Wiki page history
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Wiki page not found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactRevisionSearchResult'
          description: Authentication is required
      summary: Returns the change history of the specified wiki page
      tags:
      - Wiki
      x-accepts: application/json
  /v3/wikipages/{wikiId}/restorecontent:
    put:
      operationId: restoreWikiPageContent
      parameters:
      - description: Wiki page id
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The version to be restored
        explode: true
        in: query
        name: version
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Wiki page or version not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Access denied
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Wiki page has been restored
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Authentication is required
      summary: Restores the content from a previous version of a wiki page
      tags:
      - Wiki
      x-accepts: application/json
  /v3/wikipages/{wikiId}/permissions:
    get:
      operationId: getWikiPermissions
      parameters:
      - description: Wiki page id
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Permissions of the wiki page
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Authorization is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Wiki page not found
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Authentication is required
      summary: Get permissions of a wiki page
      tags:
      - Wiki
      x-accepts: application/json
    put:
      operationId: setWikiPermissions
      parameters:
      - description: Wiki page id
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Set permissions of children recursively
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPermissionsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Permissions of the wiki page
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Authorization is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Wiki page not found
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Request cannot be processed
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessPermission'
                type: array
          description: Authentication is required
      summary: Set permissions of a wiki page
      tags:
      - Wiki
      x-content-type: application/json
      x-accepts: application/json
  /v3/wikipages/{wikiId}/html:
    get:
      operationId: renderWikiPage
      parameters:
      - description: ID of the wiki page
        explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: version of the wiki page
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "429":
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: Access denied
        "400":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: Request cannot be processed
        "200":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: The wiki content rendered as HTML
        "401":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: Authentication is required
        "404":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: "The wiki page does not exist, or the artifact is not a wiki\
            \ page"
      summary: Render a wiki page as HTML
      tags:
      - Wiki
      x-accepts: application/json
  /v3/wikipages/{itemId}:
    put:
      operationId: updateWikiPage
      parameters:
      - description: Id of the wiki page to update
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WikiPage'
        description: Wiki page details
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Wikipage not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Access denied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Request cannot be processed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Properties of the updated wikipage
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Authentication is required
      summary: Update and/or move a wiki page
      tags:
      - Wiki
      x-content-type: application/json
      x-accepts: application/json
  /v3/projects/{projectId}/wiki2html:
    post:
      operationId: renderWikiMarkup
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WikiRenderRequest'
      responses:
        "429":
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: Access denied
        "400":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: Request cannot be processed
        "200":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: The wiki content rendered as HTML
        "401":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: Authentication is required
        "404":
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: "The wiki page does not exist, or the artifact is not a wiki\
            \ page"
      summary: Render a wiki page as HTML in a specific context
      tags:
      - Wiki
      x-content-type: application/json
      x-accepts: application/json
  /v3/wikipages/{wikiId}/comments:
    post:
      operationId: commentOnWiki
      parameters:
      - explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostComment'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentReference'
                type: array
          description: Comment created successfully
        "500":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentReference'
                type: array
          description: Unexpected error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentReference'
                type: array
          description: Authorization is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentReference'
                type: array
          description: Wiki page not found
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttachmentReference'
                type: array
          description: Authentication is required
      summary: Comment on a wiki page
      tags:
      - Wiki's comment
      x-content-type: multipart/form-data
      x-accepts: application/json
  /v3/wikipages/{wikiId}/attachments:
    get:
      operationId: getAttachmentByName
      parameters:
      - explode: false
        in: path
        name: wikiId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: fileName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Attachment of wiki page
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Wiki page / Attachment not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authorization is required
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Authentication is required
      summary: Get attachment of wiki page by file name
      tags:
      - Wiki's comment
      x-accepts: application/json
  /v3/wikipages:
    post:
      operationId: createWikiPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WikiPage'
        description: Wiki page details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Properties of the created wikipage
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Access denied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Request cannot be processed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Authentication is required
      summary: Create a new wiki page
      tags:
      - Wiki
      x-content-type: application/json
      x-accepts: application/json
  /v3/users/groups/{groupId}/members:
    get:
      operationId: getGroupMembers
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferenceSearchResult'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferenceSearchResult'
          description: User group is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferenceSearchResult'
          description: Member by id
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReferenceSearchResult'
          description: Authentication is required
      summary: Get all members of a user group
      tags:
      - Group
      x-accepts: application/json
  /v3/users/groups:
    get:
      operationId: getGroups
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupReference'
                type: array
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupReference'
                type: array
          description: User Group references
      summary: Get user groups
      tags:
      - Group
      x-accepts: application/json
  /v3/users/groups/{groupId}:
    get:
      operationId: getGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: User Group not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: User Group
      summary: Get user group
      tags:
      - Group
      x-accepts: application/json
  /v3/projects/deploy:
    post:
      description: The configuration file needs to be uploaded to codebeamer Documents
      operationId: deployConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployProject'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Authentication is required
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Error when deploying the project configuration.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project or configuration file not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Request cannot be processed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project configuration deployed
      summary: Deploy a project configuration to a Project
      tags:
      - Project
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/fields/{fieldId}/options:
    get:
      operationId: getChoiceOptions
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: fieldId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of the result page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items in a result page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Options
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: No option found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Authentication is required
      summary: Get the options of a choice field of tracker
      tags:
      - Tracker item
      x-accepts: application/json
  /v3/trackers/{trackerId}/fields/{fieldId}/options/{optionId}:
    get:
      operationId: getChoiceOption
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: fieldId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: optionId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceOptionReference'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceOptionReference'
          description: Option by id
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceOptionReference'
          description: Option not found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceOptionReference'
          description: Authentication is required
      summary: Get option of a choice field of tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}:
    delete:
      operationId: deleteTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          description: Authentication is required
        "200":
          description: Tracker deleted.
        "404":
          description: Tracker is not found
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Deletes a tracker
      tags:
      - Tracker
      x-accepts: '*/*'
    get:
      operationId: getTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Tracker
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Project / Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get tracker
      tags:
      - Tracker
      x-accepts: application/json
    put:
      operationId: updateTracker
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tracker'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Tracker settings
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Updates a specific tracker
      tags:
      - Tracker
      x-content-type: application/json
      x-accepts: application/json
  /v3/projects/{projectId}/trackers:
    get:
      operationId: getTrackers
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerReference'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerReference'
                type: array
          description: Project / Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerReference'
                type: array
          description: Trackers
      summary: Get trackers
      tags:
      - Project
      x-accepts: application/json
    post:
      operationId: createTracker
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Identifier of the template tracker.
        explode: true
        in: query
        name: templateId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tracker'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: "Bad request: Tracker settings validation failed."
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Tracker settings
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracker'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Create a tracker
      tags:
      - Project
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/types:
    get:
      operationId: getTrackerTypes
      parameters:
      - description: "Outline is enabled, disabled or any(no filtering will be applied)."
        explode: true
        in: query
        name: outline
        required: false
        schema:
          default: ANY
          enum:
          - ENABLED
          - DISABLED
          - ANY
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerTypeReference'
                type: array
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerTypeReference'
                type: array
          description: Tracker types
      summary: Get the list of tracker types
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/reports:
    get:
      operationId: getTrackerReports
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportReference'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportReference'
                type: array
          description: Tracker not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportReference'
                type: array
          description: Tracker report reference list
        "500":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportReference'
                type: array
          description: Internal server error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get all reports of a specific tracker
      tags:
      - Tracker report
      x-accepts: application/json
    post:
      operationId: createTrackerReport
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerReportSettings'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerReportSettings'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerReportSettings'
          description: Tracker report settings
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerReportSettings'
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Creates a report of a specific tracker
      tags:
      - Tracker report
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{trackerId}/reports/{reportId}:
    delete:
      operationId: deleteTrackerReport
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          description: Authentication is required
        "200":
          description: Tracker report deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          description: Tracker / Report not found
      summary: Deletes a report of a specific tracker
      tags:
      - Tracker report
      x-accepts: application/json
    put:
      operationId: updateTrackerReport
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerReportSettings'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerReportSettings'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerReportSettings'
          description: Tracker report settings
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerReportSettings'
          description: Tracker / Report not found
      summary: Updates a report of a specific tracker
      tags:
      - Tracker report
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{trackerId}/reports/{reportId}/items:
    get:
      operationId: getTrackerReportItems
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of a report page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items a report page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportItemResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportItemResult'
          description: Tracker report items
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportItemResult'
          description: Tracker / Report not found
      summary: Get report items of a specific tracker view
      tags:
      - Tracker report
      x-accepts: application/json
  /v3/trackers/types/{trackerTypeId}:
    get:
      operationId: getTrackerType
      parameters:
      - explode: false
        in: path
        name: trackerTypeId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerType'
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerType'
          description: Tracker type
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerType'
          description: Tracker type is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get the immutable definition of a tracker type
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/outline:
    get:
      operationId: getTrackerOutline
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Show only the children of this item.
        explode: true
        in: query
        name: parentItemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The depth level of the result outline.
        explode: true
        in: query
        name: resultDepthFilter
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineItemSearchResult'
          description: Authentication is required
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineItemSearchResult'
          description: Internal server error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineItemSearchResult'
          description: Not authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineItemSearchResult'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineItemSearchResult'
          description: Request cannot be processed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineItemSearchResult'
          description: Outline of the tracker
      summary: Get outline of a specific tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/projects/{projectId}/trackers/search:
    post:
      operationId: searchAllTrackersInProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerFilteringRequest'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerSearchResult'
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerSearchResult'
          description: Project / Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerSearchResult'
          description: Trackers
      summary: Get the list of all trackers in a project
      tags:
      - Project
      x-content-type: application/json
      x-accepts: application/json
  /v3/trackers/{trackerId}/transitions:
    get:
      operationId: getTrackerTransitions
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The from status id filter for transitions.
        explode: true
        in: query
        name: fromStatusId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Authentication is required
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Tracker not found
        "500":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Internal server error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowTransition'
                type: array
          description: Tracker transition list
      summary: Get all transitions of a specific tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/baselines:
    get:
      operationId: getTrackerBaselines
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Authentication is required
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Internal server error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Not authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Tracker is not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceSearchResult'
          description: Baselines of the tracker
      summary: Get baselines of a specific tracker
      tags:
      - Tracker
      x-accepts: application/json
  /v3/trackers/{trackerId}/icon:
    put:
      operationId: updateTrackerIcon
      parameters:
      - description: Id of the tracker
        explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateTrackerIcon_request'
        description: Icon image file
        required: false
      responses:
        "400":
          description: "Could not read image from the request, or it's the wrong format"
        "404":
          description: Tracker not found
        "429":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "403":
          description: The tracker could not be accessed
        "200":
          description: Tracker icon uploaded successfully
        "401":
          description: Authentication is required
      summary: Upload a tracker icon
      tags:
      - Tracker
      x-content-type: multipart/form-data
      x-accepts: '*/*'
  /v3/trackers/{trackerId}/reports/{reportId}/results:
    get:
      operationId: getTrackerReport
      parameters:
      - explode: false
        in: path
        name: trackerId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Index of a report page starting from 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: "Number of items a report page. Max value: 500"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 25
          format: int32
          type: integer
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: Tracker report
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResult'
          description: Tracker / Report not found
      summary: Get a report of a specific tracker
      tags:
      - Tracker report
      x-accepts: application/json
  /v3/traceability/items:
    post:
      description: Get traceability initial ids!
      operationId: getTraceabilityInitialItemIds
      parameters:
      - description: Number of items in a result page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Index of the result page.
        explode: true
        in: query
        name: pageNo
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceabilityInitialLevelFilter'
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TraceabilityItem'
                type: array
          description: Authentication is required
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TraceabilityItem'
                type: array
          description: Tracker item list
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TraceabilityItem'
                type: array
          description: Tracker not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
      summary: Get initial ids
      tags:
      - Traceability
      x-content-type: application/json
      x-accepts: application/json
  /v3/traceability/relations:
    post:
      description: Get traceability item ids!
      operationId: getTraceabilityLevelItemIds
      parameters:
      - description: Number of items per level.
        explode: true
        in: query
        name: itemsOnLevel
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of items per item.
        explode: true
        in: query
        name: itemsFromPreviousItem
        required: false
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceabilityLevelFilter'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceabilityResult'
          description: Authentication is required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceabilityResult'
          description: Traceability items list
      summary: Get traceability level item ids
      tags:
      - Traceability
      x-content-type: application/json
      x-accepts: application/json
  /v3/export/tracker-item-reviews:
    post:
      operationId: batchGetTrackerItemReviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetTrackerItemReviewsRequest'
      responses:
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemWithTrackerItemReviewsExport'
                type: array
          description: There is no baseline accessible with the supplied ID
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemWithTrackerItemReviewsExport'
                type: array
          description: List of tracker item reviews for each tracker item
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemWithTrackerItemReviewsExport'
                type: array
          description: Request cannot be processed
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemWithTrackerItemReviewsExport'
                type: array
          description: "Tracker item reviews are disabled, or access to them is denied"
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemWithTrackerItemReviewsExport'
                type: array
          description: Authentication is required
      summary: Get tracker item reviews by a list of tracker item IDs
      tags:
      - Export
      x-content-type: application/json
      x-accepts: application/json
  /v3/items/{itemId}/reviews:
    get:
      operationId: getTrackerItemReviews
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemReview'
                type: array
          description: Tracker item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemReview'
                type: array
          description: Request cannot be processed
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemReview'
                type: array
          description: "Tracker item reviews are disabled, or access to them is denied"
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemReview'
                type: array
          description: List of tracker item reviews for the particular item
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrackerItemReview'
                type: array
          description: Authentication is required
      summary: Get all Tracker Item Reviews for a particular Tracker Item
      tags:
      - Tracker item
      x-accepts: application/json
components:
  schemas:
    AbstractField:
      description: Abstract field
      discriminator:
        propertyName: type
      example:
        mandatoryInStatuses:
        - null
        - null
        hidden: true
        description: description
        type: type
        title: title
        hideIfDependencyFormula: hideIfDependencyFormula
        trackerItemField: trackerItemField
        valueModel: valueModel
        mandatoryIfDependencyFormula: mandatoryIfDependencyFormula
        legacyRestName: legacyRestName
        name: name
        formula: formula
        id: 0
      properties:
        id:
          description: Id of a field
          format: int32
          type: integer
        name:
          description: Name of a field
          type: string
        description:
          description: Description of a field
          type: string
        type:
          description: Type of a field
          type: string
        hidden:
          description: Visibility status of a field
          type: boolean
        valueModel:
          description: Name of the updater/getter value model
          type: string
        title:
          description: Title of a field
          type: string
        legacyRestName:
          description: Identifier matching the legacy REST API naming
          type: string
        trackerItemField:
          description: Tracker item's field name for this field
          type: string
        mandatoryInStatuses:
          description: List of statuses where the field is mandatory.
          items:
            $ref: '#/components/schemas/ChoiceOptionReference'
          type: array
        formula:
          description: Formula value of a field
          type: string
        hideIfDependencyFormula:
          description: Hide If dependency formula value of a field
          type: string
        mandatoryIfDependencyFormula:
          description: Mandatory If dependency formula value of a field
          type: string
      type: object
    AbstractFieldValue:
      description: Value container of a field
      discriminator:
        propertyName: type
      example:
        name: name
        type: type
        fieldId: 9
      properties:
        fieldId:
          description: Id of the field
          format: int32
          type: integer
        type:
          description: Type of the field
          type: string
        name:
          description: Name of the field
          type: string
      required:
      - type
      type: object
    AbstractOutline:
      description: Abstract outline entity
      discriminator:
        propertyName: type
      properties:
        outlineIndexes:
          description: Indexes of the entity in the outline.
          items:
            $ref: '#/components/schemas/OutlineIndex'
          type: array
        type:
          description: Type of the outline model
          type: string
      type: object
    AbstractReference:
      description: Reference to an item
      discriminator:
        propertyName: type
      example:
        name: name
        id: 0
        type: type
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        type:
          description: Type of a referenced object
          type: string
      type: object
    AbstractTrackerItemReference:
      description: Reference to an item
      discriminator:
        propertyName: type
      properties:
        id:
          description: Id of the reference/association
          example: 12142
          format: int32
          type: integer
        itemRevision:
          $ref: '#/components/schemas/TrackerItemRevision'
        type:
          description: Type of the relation
          example: DownstreamTrackerItemReference
          type: string
      type: object
    AccessPermission:
      description: Access permission of specific role
      example:
        role: null
        field: null
        accessLevel: NONE
        project: null
      properties:
        role:
          $ref: '#/components/schemas/RoleReference'
        field:
          $ref: '#/components/schemas/FieldReference'
        project:
          $ref: '#/components/schemas/ProjectReference'
        accessLevel:
          description: Access level
          enum:
          - NONE
          - READ
          - WRITE
          type: string
      type: object
    AccessPermissionsRequest:
      description: Request model to provide permissions.
      example:
        permissions:
        - role: null
          field: null
          accessLevel: NONE
          project: null
        - role: null
          field: null
          accessLevel: NONE
          project: null
      properties:
        permissions:
          description: List of access permissions.
          items:
            $ref: '#/components/schemas/AccessPermission'
          type: array
      type: object
    ArtifactReferenceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Artifact reference field
      type: object
    ArtifactRevision:
      description: Model for a specific version of an artifact
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        modifiedBy: null
        id: 0
        version: 5
        changeSummary: changeSummary
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        version:
          description: Version of the artifact
          format: int32
          type: integer
        changeSummary:
          description: Summary of the change
          type: string
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
      type: object
    ArtifactRevisionSearchResult:
      description: One page of artifact revisions.
      example:
        total: 1
        pageSize: 6
        revisions:
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          modifiedBy: null
          id: 0
          version: 5
          changeSummary: changeSummary
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          modifiedBy: null
          id: 0
          version: 5
          changeSummary: changeSummary
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        revisions:
          description: Found artifact revision
          items:
            $ref: '#/components/schemas/ArtifactRevision'
          type: array
      type: object
    Association:
      description: Basic properties of a codebeamer association
      example:
        propagatingDependencies: true
        description: description
        biDirectionalPropagation: true
        type: null
        reversePropagation: true
        url: url
        baselineId: 1
        propagatingSuspects: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: null
        name: name
        from:
          name: name
          id: 0
          type: type
        id: 0
        to:
          name: name
          id: 0
          type: type
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        from:
          $ref: '#/components/schemas/AbstractReference'
        to:
          $ref: '#/components/schemas/AbstractReference'
        url:
          description: Association to url
          type: string
        type:
          $ref: '#/components/schemas/AssociationTypeReference'
        propagatingSuspects:
          description: Propagating suspects
          example: true
          type: boolean
        reversePropagation:
          description: Reverse propagation
          example: true
          type: boolean
        biDirectionalPropagation:
          description: Bi-directional reference
          example: true
          type: boolean
        propagatingDependencies:
          description: Propagating dependencies
          example: true
          type: boolean
        baselineId:
          description: Baseline ID
          example: 1
          format: int32
          type: integer
        createdBy:
          $ref: '#/components/schemas/UserReference'
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
      required:
      - from
      type: object
    AssociationType:
      description: Basic properties of a codebeamer association type
      example:
        name: name
        description: description
        id: 0
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
      type: object
    AssociationTypeReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to an association type
      type: object
    Attachment:
      description: Attachments of a comment
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        size: 5
        createdBy: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        sha512: sha512
        modifiedBy: null
        id: 0
        descriptionFormat: PlainText
        version: 5
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        version:
          description: Version of a attachment
          format: int32
          type: integer
        size:
          description: Size of a attachment
          format: int64
          type: integer
        sha512:
          description: Hash of a attachment
          type: string
      type: object
    AttachmentMigrationRequest:
      description: Request for migrating attachments
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        targetItem: null
        migrationAction: MOVE
        description: description
        files:
        - sha512sum: 2e74ed4b0741e1fbe22d61e165c7c0dc4383a1aa5aa708291e32fff4cb189b9a5dfea7ffca2a22dcca258751cf4ad947c1c34abdf3fa2994219be394fbe40370
          fileName: newFile.txt
          md5sum: f6967f92c24a8f3c4849d30c9f17e321
          filePath: folder/file.txt
        - sha512sum: 2e74ed4b0741e1fbe22d61e165c7c0dc4383a1aa5aa708291e32fff4cb189b9a5dfea7ffca2a22dcca258751cf4ad947c1c34abdf3fa2994219be394fbe40370
          fileName: newFile.txt
          md5sum: f6967f92c24a8f3c4849d30c9f17e321
          filePath: folder/file.txt
        modifiedBy: null
        descriptionFormat: PlainText
      properties:
        targetItem:
          $ref: '#/components/schemas/TrackerItemReference'
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        migrationAction:
          description: Type of action made on the source files.
          enum:
          - MOVE
          - COPY
          type: string
        files:
          description: List of files to migrate
          items:
            $ref: '#/components/schemas/RemoteMigrationFile'
          type: array
      type: object
    AttachmentReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to an attachment
      type: object
    AttachmentSearchResult:
      description: One page of attachments.
      example:
        total: 1
        attachments:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 5
          createdBy: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          sha512: sha512
          modifiedBy: null
          id: 0
          descriptionFormat: PlainText
          version: 5
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 5
          createdBy: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          sha512: sha512
          modifiedBy: null
          id: 0
          descriptionFormat: PlainText
          version: 5
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        attachments:
          description: Found attachments
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
      type: object
    AutoApplyTestStepReuses:
      description: Specifies which Test Cases are checked for duplicate Steps
      example:
        testCases:
        - null
        - null
        scanTestCaseLibraries: true
      properties:
        testCases:
          description: "The Test Cases to find the duplicated steps inside: if these\
            \ Test Cases has duplicated Steps these will be converted to Step-Reuses."
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
        scanTestCaseLibraries:
          description: "If it scans/finds the duplicate Steps in Test Case libraries\
            \ of the user? Note: that only Reusable Steps will be reused from these\
            \ libraries!"
          type: boolean
      type: object
    BackgroundJobReference:
      description: Reference to a background job
      example:
        id: id
        type: PROJECT_DEPLOYMENT_EXPORT_JOB
      properties:
        id:
          description: String id of the job
          type: string
        type:
          description: Type of the job
          enum:
          - PROJECT_DEPLOYMENT_EXPORT_JOB
          type: string
      required:
      - id
      - type
      type: object
    BadRequestException:
      properties:
        message:
          type: string
        resourceUri:
          type: string
      type: object
    Baseline:
      description: Properties of a baseline
      example:
        name: name
        tracker: null
        description: description
        project: null
        id: 0
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        project:
          $ref: '#/components/schemas/ProjectReference'
        tracker:
          $ref: '#/components/schemas/TrackerReference'
      type: object
    BatchGetTrackerItemReviewsRequest:
      description: Request model to fetch Tracker Item Reviews for multiple Tracker
        Items.
      example:
        itemIds:
        - 0
        - 0
        baselineId: 6
      properties:
        itemIds:
          description: List of Tracker Item IDs
          items:
            description: List of Tracker Item IDs
            format: int32
            type: integer
          type: array
        baselineId:
          description: Optional Baseline ID
          format: int32
          type: integer
      type: object
    BoolField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Bool field
      type: object
    BoolFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Value of the field
            type: boolean
        type: object
      description: Value container of a bool field
      required:
      - type
      - value
      type: object
    BulkOperationResponse:
      description: Holds the response of a bulk operation
      example:
        successfulOperationsCount: 0
        failedOperations:
        - id: 6
          exceptionMessage: exceptionMessage
        - id: 6
          exceptionMessage: exceptionMessage
      properties:
        successfulOperationsCount:
          description: Count of successful operations
          format: int32
          type: integer
        failedOperations:
          description: List of failed operations
          items:
            $ref: '#/components/schemas/FailedOperation'
          type: array
      type: object
    ChoiceFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          values:
            description: Values of the choice option field
            items:
              $ref: '#/components/schemas/AbstractReference'
            type: array
        type: object
      description: Reference container of a choice option field
      required:
      - type
      type: object
    ChoiceOptionReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a choice option
      type: object
    ColorField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Color field
      type: object
    ColorFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Hex code of the color
            example: '#FF0055'
            type: string
        type: object
      description: Value container of a color field
      required:
      - type
      - value
      type: object
    Comment:
      description: Comment of a tracker item
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        parent: null
        attachments:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 5
          createdBy: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          sha512: sha512
          modifiedBy: null
          id: 0
          descriptionFormat: PlainText
          version: 5
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 5
          createdBy: null
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          sha512: sha512
          modifiedBy: null
          id: 0
          descriptionFormat: PlainText
          version: 5
        createdBy: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        commentFormat: PlainText
        name: name
        modifiedBy: null
        comment: comment
        id: 0
        version: 6
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        version:
          description: Version of a comment
          format: int32
          type: integer
        attachments:
          description: Attachments of a comment
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        comment:
          description: Text of a comment
          type: string
        commentFormat:
          description: Format of a comment
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        parent:
          $ref: '#/components/schemas/CommentReference'
      type: object
    CommentReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a comment of a tracker item
      type: object
    CountryField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          availableOptions:
            items:
              type: string
            type: array
        type: object
      description: Country field
      type: object
    CountryFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          values:
            description: Country codes
            items:
              description: Country codes
              type: string
            type: array
            uniqueItems: true
        type: object
      description: Value container of a country field
      required:
      - type
      - values
      type: object
    CreateBaselineRequest:
      example:
        name: name
        tracker: null
        description: description
        project: null
      properties:
        name:
          description: Name of baseline
          type: string
        description:
          description: Description of baseline
          type: string
        project:
          $ref: '#/components/schemas/ProjectReference'
        tracker:
          $ref: '#/components/schemas/TrackerReference'
      required:
      - name
      - project
      type: object
    CreateTestRunFromTestSetsRequest:
      description: Request model to create a test run from multiple test sets
      example:
        testSetRefs:
        - null
        - null
        testRunModel:
          parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
      properties:
        testSetRefs:
          description: Test set ids to include into the test run. Only the first test
            set will be considered.
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
        testRunModel:
          $ref: '#/components/schemas/TrackerItem'
      type: object
    CreateTestRunRequest:
      description: Request model to create a test run from multiple test cases or
        1 test set
      example:
        testSetIds:
        - null
        - null
        testSetRefs:
        - null
        - null
        testRunModel:
          parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
        testCaseIds:
        - null
        - null
        testCaseRefs:
        - null
        - null
      properties:
        testCaseIds:
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
          writeOnly: true
        testSetIds:
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
          writeOnly: true
        testRunModel:
          $ref: '#/components/schemas/TrackerItem'
        testSetRefs:
          description: Test set ids to include into the test run. Only the first test
            set will be considered.
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
        testCaseRefs:
          description: Test case ids to include into the test run
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
      type: object
    DateField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Date field
      type: object
    DateFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Date value
            format: date-time
            type: string
        type: object
      description: Value container of a date field
      required:
      - type
      - value
      type: object
    DecimalField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          min:
            description: Minimum value of a field
            format: double
            type: number
          max:
            description: Maximum value of a field
            format: double
            type: number
        type: object
      description: Decimal field
      type: object
    DecimalFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Double value
            format: double
            type: number
        type: object
      description: Value container of a double field
      required:
      - type
      - value
      type: object
    DeployProject:
      example:
        password: password
        projectFileId: 6
        project: null
        configurationFileId: 0
      properties:
        project:
          $ref: '#/components/schemas/ProjectReference'
        configurationFileId:
          description: Id of a codebeamer document
          format: int32
          type: integer
        projectFileId:
          description: Id of a codebeamer document
          format: int32
          type: integer
        password:
          description: The password to decrypt the uploaded configuration file
          type: string
      type: object
    DeploymentModel:
      properties:
        imports:
          description: Deployment files
          format: binary
          type: string
      required:
      - imports
      type: object
    DeploymentProjectExportSettings:
      description: Project export settings for deployment
      example:
        includeTrackers: true
        trackers:
        - trackerId: 6
          itemsIncluded: true
        - trackerId: 6
          itemsIncluded: true
        includeQueries: true
        includeTrackerItems: true
        projectId: 0
      properties:
        projectId:
          description: Project id
          format: int32
          type: integer
        includeTrackerItems:
          description: Flag if tracker items are included.
          type: boolean
        includeQueries:
          description: Flag if queries are included.
          type: boolean
        includeTrackers:
          description: Flag if trackers are included.
          type: boolean
        trackers:
          description: Tracker export settings
          items:
            $ref: '#/components/schemas/DeploymentTrackerExportSettings'
          type: array
      required:
      - projectId
      type: object
    DeploymentTrackerExportSettings:
      description: Tracker export settings for deployment
      example:
        trackerId: 6
        itemsIncluded: true
      properties:
        trackerId:
          description: Project id
          format: int32
          type: integer
        itemsIncluded:
          description: Flag if tracker items are included.
          type: boolean
      required:
      - trackerId
      type: object
    DownstreamTrackerItemReference:
      allOf:
      - $ref: '#/components/schemas/AbstractTrackerItemReference'
      description: Reference pointing to another item
      type: object
    DurationField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          min:
            description: Minimum value of a field
            type: string
          max:
            description: Maximum value of a field
            type: string
        type: object
      description: Duration field
      type: object
    DurationFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Duration value in milliseconds
            format: int64
            type: integer
        type: object
      description: Value container of a duration field
      required:
      - type
      - value
      type: object
    EditComment:
      properties:
        comment:
          description: Text of a comment
          maxLength: 2147483647
          minLength: 1
          type: string
        commentFormat:
          default: PlainText
          description: Format of a comment
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        attachments:
          description: Attachments of a comment
          format: binary
          type: string
      required:
      - comment
      type: object
    ExportForDeploymentRequest:
      description: Request export for deployment
      example:
        password: password
        projectSettings:
        - includeTrackers: true
          trackers:
          - trackerId: 6
            itemsIncluded: true
          - trackerId: 6
            itemsIncluded: true
          includeQueries: true
          includeTrackerItems: true
          projectId: 0
        - includeTrackers: true
          trackers:
          - trackerId: 6
            itemsIncluded: true
          - trackerId: 6
            itemsIncluded: true
          includeQueries: true
          includeTrackerItems: true
          projectId: 0
        exportFileName: exportFileName
      properties:
        projectSettings:
          description: Project settings
          items:
            $ref: '#/components/schemas/DeploymentProjectExportSettings'
          type: array
        password:
          description: A password that is used during the project encryption.
          type: string
        exportFileName:
          description: Name of the resulting export file (without extension).
          type: string
      type: object
    ExportProject:
      example:
        skipWikiPages: true
        password: "007"
        selectedTrackerIds:
        - 0
        - 0
        skipAssociations: false
        skipReports: false
        skipTrackerItems: false
      properties:
        password:
          description: A password that is used during the project encryption.
          example: "007"
          type: string
        skipTrackerItems:
          default: false
          description: "If true, then the Tracker Items are not exported"
          type: boolean
        skipWikiPages:
          default: true
          description: "If true, then the Wiki PAges are not exported"
          type: boolean
        skipAssociations:
          default: false
          description: "If true, then the Associations are not exported"
          type: boolean
        skipReports:
          default: false
          description: "If true, then the Reports are not exported"
          type: boolean
        selectedTrackerIds:
          description: If this list is not empty then only the Trackers listed here
            are exported.é
          items:
            description: If this list is not empty then only the Trackers listed here
              are exported.é
            format: int32
            type: integer
          type: array
      type: object
    FailedOperation:
      description: Holds the details of a failed operation
      example:
        id: 6
        exceptionMessage: exceptionMessage
      properties:
        id:
          description: Entity id
          format: int32
          type: integer
        exceptionMessage:
          description: Exception message
          type: string
      type: object
    FieldReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      - properties:
          trackerId:
            description: Id of the tracker
            example: 1000
            format: int32
            type: integer
        type: object
      description: Reference to a field of a specific tracker
      type: object
    IncomingTrackerItemAssociation:
      allOf:
      - $ref: '#/components/schemas/AbstractTrackerItemReference'
      description: Association pointing to an item
      type: object
    IntegerField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          min:
            description: Minimum value of a field
            format: int32
            type: integer
          max:
            description: Maximum value of a field
            format: int32
            type: integer
        type: object
      description: Integer field
      type: object
    IntegerFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Integer value
            format: int32
            type: integer
        type: object
      description: Value container of a integer field
      required:
      - type
      - value
      type: object
    InternalServerErrorException:
      properties:
        resourceUri:
          type: string
        message:
          type: string
      type: object
    LanguageField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          availableOptions:
            items:
              type: string
            type: array
        type: object
      description: Language field
      type: object
    LanguageFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          values:
            description: Language codes
            items:
              description: Language codes
              type: string
            type: array
            uniqueItems: true
        type: object
      description: Value container of a language field
      required:
      - type
      - values
      type: object
    LockInfo:
      description: Information about an artifact lock
      example:
        expires: true
        user: null
      properties:
        user:
          $ref: '#/components/schemas/UserReference'
        expires:
          description: "Whether the lock will expire on its own, eg. if it is a soft\
            \ lock"
          type: boolean
      type: object
    LockRequest:
      description: "Configuration to request a lock. If 'hard' is true, duration must\
        \ be null, or unspecified."
      example:
        duration: 1:30h
        hard: true
      properties:
        hard:
          description: Whether the lock should be hard
          type: boolean
        duration:
          description: "If not a hard lock, the duration specified in time notation"
          example: 1:30h
          type: string
      type: object
    MaintenanceMode:
      description: Basic properties of maintenance mode
      example:
        systemMode: NORMAL
        properties:
          loginErrorText: loginErrorText
          loginText: loginText
          notificationText: notificationText
          welcomeText: welcomeText
          slogan: slogan
      properties:
        systemMode:
          description: System mode
          enum:
          - NORMAL
          - MAINTENANCE
          type: string
        properties:
          $ref: '#/components/schemas/MaintenanceModeProperties'
      type: object
    MaintenanceModeProperties:
      description: Extra properties for maintenance mode
      example:
        loginErrorText: loginErrorText
        loginText: loginText
        notificationText: notificationText
        welcomeText: welcomeText
        slogan: slogan
      nullable: true
      properties:
        loginText:
          description: Text shown on login screen
          type: string
        welcomeText:
          description: Welcome text
          type: string
        slogan:
          description: Slogan text
          type: string
        loginErrorText:
          description: Error text shown during login
          type: string
        notificationText:
          description: Notification text
          type: string
      required:
      - loginErrorText
      - loginText
      - notificationText
      - slogan
      - welcomeText
      type: object
    MemberField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          memberTypes:
            description: Supported member type of a member field
            items:
              description: Supported member type of a member field
              enum:
              - USER
              - ROLE
              - GROUP
              type: string
            type: array
        type: object
      description: Member field
      type: object
    MemberReferenceSearchResult:
      description: Paginated search result of members
      example:
        total: 1
        members:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        members:
          description: Found members
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
      type: object
    ModelAndView:
      properties:
        view:
          $ref: '#/components/schemas/View'
        model:
          additionalProperties:
            type: object
          type: object
        status:
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
          type: string
        viewName:
          type: string
        reference:
          type: boolean
        modelMap:
          $ref: '#/components/schemas/ModelAndView_modelMap'
        empty:
          type: boolean
      type: object
    ModelMap:
      additionalProperties:
        type: object
      properties:
        empty:
          type: boolean
      type: object
    NotSupportedFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      description: Not supported field value
      required:
      - type
      type: object
    OptionChoiceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          options:
            description: Available options of a choice field
            items:
              $ref: '#/components/schemas/ChoiceOptionReference'
            type: array
          referenceType:
            description: Type of the contained references
            type: string
        type: object
      description: Option type choice field
      type: object
    OutgoingTrackerItemAssociation:
      allOf:
      - $ref: '#/components/schemas/AbstractTrackerItemReference'
      description: Association to another item
      type: object
    OutlineIndex:
      description: Represents the index of an item on a specific outline level.
      properties:
        level:
          description: Outline level
          example: 0
          format: int32
          type: integer
        index:
          description: Outline index
          example: 1
          format: int32
          type: integer
      type: object
    OutlineItem:
      allOf:
      - $ref: '#/components/schemas/AbstractOutline'
      - properties:
          itemReference:
            $ref: '#/components/schemas/TrackerItemReference'
          hasChildren:
            description: Indicator if the item has child items.
            type: boolean
        type: object
      description: Represents an outline item.
      type: object
    OutlineItemSearchResult:
      description: Paginated search result of outline items
      example:
        outlineItems:
        - null
        - null
        total: 1
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        outlineItems:
          description: Found outline items
          items:
            $ref: '#/components/schemas/OutlineItem'
          type: array
      type: object
    OutlineWiki:
      allOf:
      - $ref: '#/components/schemas/AbstractOutline'
      - properties:
          wikiPageReferenceModel:
            $ref: '#/components/schemas/WikiPageReference'
        type: object
      description: A model created for wiki page outline models
      type: object
    PermissionIdsRequest:
      description: Request model for multiple items.
      example:
        permissions:
        - null
        - null
      properties:
        permissions:
          description: Permission references.
          items:
            $ref: '#/components/schemas/TrackerPermissionReference'
          type: array
      type: object
    PostComment:
      properties:
        comment:
          description: Text of a comment
          maxLength: 2147483647
          minLength: 1
          type: string
        commentFormat:
          default: PlainText
          description: Format of a comment
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        attachments:
          description: Attachments of a comment
          format: binary
          type: string
      required:
      - comment
      type: object
    Project:
      description: Basic properties of a codebeamer project
      example:
        template: true
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        keyName: keyName
        description: description
        version: 5
        createdAt: 2000-01-23T04:56:07.000+00:00
        deleted: true
        createdBy: null
        name: name
        closed: true
        modifiedBy: null
        id: 0
        category: category
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        version:
          description: Version of a project
          format: int32
          type: integer
        keyName:
          description: Key name of a project
          type: string
        category:
          description: Category of a project
          type: string
        closed:
          description: Closed status of a project
          type: boolean
        deleted:
          description: Delete status of a project
          type: boolean
        template:
          description: Template status of a project
          type: boolean
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
      type: object
    ProjectBaselineReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a project baseline
      type: object
    ProjectChoiceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          referenceType:
            description: Type of the contained references
            type: string
        type: object
      description: Project item type choice field
      type: object
    ProjectFilteringRequest:
      example:
        keyName: keyName
      properties:
        keyName:
          description: Key name of the project
          type: string
      required:
      - keyName
      type: object
    ProjectMemberPermissions:
      description: Project member permissions
      example:
        roles:
        - null
        - null
      properties:
        roles:
          description: Role references
          items:
            $ref: '#/components/schemas/RoleReference'
          nullable: true
          type: array
      type: object
    ProjectReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a project
      type: object
    ProjectSearchResult:
      description: One page of artifact revisions.
      example:
        total: 1
        projects:
        - template: true
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          keyName: keyName
          description: description
          version: 5
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          createdBy: null
          name: name
          closed: true
          modifiedBy: null
          id: 0
          category: category
          descriptionFormat: PlainText
        - template: true
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          keyName: keyName
          description: description
          version: 5
          createdAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          createdBy: null
          name: name
          closed: true
          modifiedBy: null
          id: 0
          category: category
          descriptionFormat: PlainText
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        projects:
          description: Found projects
          items:
            $ref: '#/components/schemas/Project'
          type: array
      type: object
    ReferenceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Administrative reference field
      type: object
    ReferenceSearchResult:
      description: One page of references.
      example:
        total: 1
        references:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        references:
          description: Found references
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
      type: object
    ReferredTestStepFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          referredStepId:
            description: Id of the referred test step
            type: string
          referredTestCaseId:
            description: Id of the test case where the referred test step comes
            format: int32
            type: integer
          value:
            description: Id of the Test Step
            type: string
        type: object
      description: Value container of a referred test step
      required:
      - referredStepId
      - referredTestCaseId
      - type
      type: object
    RemoteMigrationFile:
      description: A file to migrate from a remote directory.
      example:
        sha512sum: 2e74ed4b0741e1fbe22d61e165c7c0dc4383a1aa5aa708291e32fff4cb189b9a5dfea7ffca2a22dcca258751cf4ad947c1c34abdf3fa2994219be394fbe40370
        fileName: newFile.txt
        md5sum: f6967f92c24a8f3c4849d30c9f17e321
        filePath: folder/file.txt
      properties:
        sha512sum:
          description: Precomputed SHA512 checksum of the file.
          example: 2e74ed4b0741e1fbe22d61e165c7c0dc4383a1aa5aa708291e32fff4cb189b9a5dfea7ffca2a22dcca258751cf4ad947c1c34abdf3fa2994219be394fbe40370
          type: string
        md5sum:
          description: Precomputed MD5 checksum of the file.
          example: f6967f92c24a8f3c4849d30c9f17e321
          type: string
        filePath:
          description: The path of the file relative to the configured migration home
            directory.
          example: folder/file.txt
          type: string
        fileName:
          description: File name of the newly created attachment.
          example: newFile.txt
          type: string
      type: object
    ReportAggregate:
      description: Aggregated values for a column of a group.
      example:
        average: 11.32
        columnRef: 11-1
        maximum: 21.32
        sum: 22.64
        minimum: 1.32
      properties:
        columnRef:
          description: Column reference
          example: 11-1
          type: string
        average:
          description: Average of the column values
          example: 11.32
          format: double
          type: number
        minimum:
          description: Minimum of the column values
          example: 1.32
          format: double
          type: number
        maximum:
          description: Average of the column values
          example: 21.32
          format: double
          type: number
        sum:
          description: Sum of the column values
          example: 22.64
          format: double
          type: number
      type: object
    ReportCell:
      description: Cell value for a column.
      properties:
        columnRef:
          description: Column reference
          type: string
        value:
          description: Cell value
          example: 12.32
          type: object
      type: object
    ReportColumn:
      description: Column definition for a report
      example:
        field: null
        name: Status
        columnRef: 12-1
        columnWidthPercentage: 16.533667
        columnIndex: 0
        type: choice
      properties:
        columnRef:
          description: Column reference
          example: 12-1
          type: string
        field:
          $ref: '#/components/schemas/FieldReference'
        name:
          description: Column name
          example: Status
          type: string
        type:
          description: Column type
          example: choice
          type: string
        columnWidthPercentage:
          description: Column width in percentage
          example: 16.533667
          format: double
          type: number
        columnIndex:
          description: Column position index in the report.
          example: 0
          format: int32
          type: integer
      type: object
    ReportColumnSettings:
      description: Settings for a column definition.
      example:
        field: null
        columnIndex: 0
      properties:
        field:
          $ref: '#/components/schemas/FieldReference'
        columnIndex:
          description: Index of the column in the report table.
          example: 0
          format: int32
          type: integer
      required:
      - columnIndex
      - field
      type: object
    ReportGroup:
      description: A report group which can contain rows or other groups based on
        the type.
      discriminator:
        propertyName: type
      example:
        count: 32
        header: "Status: In progress"
        groupingValueId: 2
        aggregates:
        - average: 11.32
          columnRef: 11-1
          maximum: 21.32
          sum: 22.64
          minimum: 1.32
        - average: 11.32
          columnRef: 11-1
          maximum: 21.32
          sum: 22.64
          minimum: 1.32
        type: row
        groupingValue: In progress
      properties:
        type:
          description: Type of the group.
          example: row
          type: string
        header:
          description: Grouping header
          example: "Status: In progress"
          type: string
        groupingValue:
          description: "The common value in the group, , if it's available"
          example: In progress
          type: string
        groupingValueId:
          description: "The id of the common value in the group, if it's available"
          example: 2
          format: int32
          type: integer
        count:
          description: "Number of items in the group, if it has subgroups then the\
            \ aggregated number of items."
          example: 32
          format: double
          type: number
        aggregates:
          description: List of the aggregate values with column id.
          items:
            $ref: '#/components/schemas/ReportAggregate'
          type: array
      type: object
    ReportGroupWithGroups:
      allOf:
      - $ref: '#/components/schemas/ReportGroup'
      - properties:
          groups:
            description: Subgroups in the group.
            items:
              $ref: '#/components/schemas/ReportGroup'
            type: array
        type: object
      description: ReportGroup having subgroups.
      type: object
    ReportGroupWithReferencedRows:
      allOf:
      - $ref: '#/components/schemas/ReportGroup'
      - properties:
          groupingLevel:
            format: int32
            type: integer
          starRow:
            format: int32
            type: integer
          rows:
            items:
              $ref: '#/components/schemas/ReportReferencedRow'
            type: array
        type: object
      description: ReportGroup having rows with references.
      type: object
    ReportGroupWithRows:
      allOf:
      - $ref: '#/components/schemas/ReportGroup'
      - properties:
          rows:
            items:
              $ref: '#/components/schemas/ReportRow'
            type: array
        type: object
      description: ReportGroup having rows.
      type: object
    ReportItem:
      description: An item of the report.
      example:
        outlineLevel: 1
        isRealResult: true
        item:
          parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
      properties:
        item:
          $ref: '#/components/schemas/TrackerItem'
        outlineLevel:
          description: Item's level in the tracker outline.
          format: int32
          type: integer
        isRealResult:
          description: Indicator if the item is a real query result (e.g. not an ancestor
            item).
          type: boolean
      type: object
    ReportItemReference:
      description: Reference data of an underlying item of a row.
      properties:
        itemId:
          description: Identifier of the underlying item.
          format: int32
          type: integer
        trackerId:
          description: Identifier of the tracker of the underlying item.
          format: int32
          type: integer
      type: object
    ReportItemResult:
      example:
        total: 1
        pageSize: 6
        page: 0
        items:
        - outlineLevel: 1
          isRealResult: true
          item:
            parent: null
            endDate: 2000-01-23T04:56:07.000+00:00
            spentMillis: 4
            modifiedAt: 2000-01-23T04:56:07.000+00:00
            assignedAt: 2000-01-23T04:56:07.000+00:00
            customFields:
            - name: name
              type: type
              fieldId: 9
            - name: name
              type: type
              fieldId: 9
            typeName: typeName
            description: description
            owners:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            resolutions:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            areas:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            assignedTo:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            platforms:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            createdAt: 2000-01-23T04:56:07.000+00:00
            children:
            - null
            - null
            tracker: null
            modifiedBy: null
            id: 0
            categories:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            closedAt: 2000-01-23T04:56:07.000+00:00
            storyPoints: 7
            accruedMillis: 3
            comments:
            - null
            - null
            teams:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            subjects:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            formality:
              name: name
              id: 0
              type: type
            estimatedMillis: 2
            priority:
              name: name
              id: 0
              type: type
            version: 2
            releaseMethod:
              name: name
              id: 0
              type: type
            createdBy: null
            versions:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            name: name
            descriptionFormat: PlainText
            startDate: 2000-01-23T04:56:07.000+00:00
            status:
              name: name
              id: 0
              type: type
            severities:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            ordinal: 7
        - outlineLevel: 1
          isRealResult: true
          item:
            parent: null
            endDate: 2000-01-23T04:56:07.000+00:00
            spentMillis: 4
            modifiedAt: 2000-01-23T04:56:07.000+00:00
            assignedAt: 2000-01-23T04:56:07.000+00:00
            customFields:
            - name: name
              type: type
              fieldId: 9
            - name: name
              type: type
              fieldId: 9
            typeName: typeName
            description: description
            owners:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            resolutions:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            areas:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            assignedTo:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            platforms:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            createdAt: 2000-01-23T04:56:07.000+00:00
            children:
            - null
            - null
            tracker: null
            modifiedBy: null
            id: 0
            categories:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            closedAt: 2000-01-23T04:56:07.000+00:00
            storyPoints: 7
            accruedMillis: 3
            comments:
            - null
            - null
            teams:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            subjects:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            formality:
              name: name
              id: 0
              type: type
            estimatedMillis: 2
            priority:
              name: name
              id: 0
              type: type
            version: 2
            releaseMethod:
              name: name
              id: 0
              type: type
            createdBy: null
            versions:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            name: name
            descriptionFormat: PlainText
            startDate: 2000-01-23T04:56:07.000+00:00
            status:
              name: name
              id: 0
              type: type
            severities:
            - name: name
              id: 0
              type: type
            - name: name
              id: 0
              type: type
            ordinal: 7
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        items:
          description: Found tracker items
          items:
            $ref: '#/components/schemas/ReportItem'
          type: array
      type: object
    ReportPagingInformation:
      description: Paging information of the current result.
      example:
        pageCount: 1
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        pageCount:
          description: Number of pages in the report
          format: int32
          type: integer
      type: object
    ReportPermission:
      description: Access permissions for the report.
      example:
        role: null
        access: READ
        project: null
      properties:
        project:
          $ref: '#/components/schemas/ProjectReference'
        role:
          $ref: '#/components/schemas/RoleReference'
        access:
          description: Access level
          enum:
          - NONE
          - READ
          - WRITE
          example: READ
          type: string
      required:
      - access
      - project
      - role
      type: object
    ReportReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a report
      type: object
    ReportReferenceLevel:
      description: Reference results for an item.
      properties:
        columns:
          description: Columns to show on this reference level.
          items:
            $ref: '#/components/schemas/ReportColumn'
          type: array
        upstreamReferenceRows:
          description: Upstream reference results.
          items:
            $ref: '#/components/schemas/ReportReferencedRow'
          type: array
        downstreamReferenceRows:
          description: Downstream reference results.
          items:
            $ref: '#/components/schemas/ReportReferencedRow'
          type: array
        referenceLevel:
          description: Reference level.
          example: 1
          format: int32
          type: integer
      type: object
    ReportReferenceLevelSettings:
      description: Reference level settings for Intelligent Table View.
      example:
        referenceTrackerTypes:
        - null
        - null
        downstreamReference: false
        level: 1
        columns:
        - field: null
          columnIndex: 0
        - field: null
          columnIndex: 0
        referenceTrackers:
        - null
        - null
        upstreamReference: true
      properties:
        referenceTrackers:
          description: Trackers to include on this level.
          items:
            $ref: '#/components/schemas/TrackerReference'
          type: array
        referenceTrackerTypes:
          description: Tracker types to include on this level.
          items:
            $ref: '#/components/schemas/TrackerTypeReference'
          type: array
        columns:
          description: Columns to show on this reference level.
          items:
            $ref: '#/components/schemas/ReportColumnSettings'
          type: array
        upstreamReference:
          description: Include upstream references indicator.
          example: true
          type: boolean
        downstreamReference:
          description: Include downstream references indicator.
          example: false
          type: boolean
        level:
          description: Level of the reference layer
          example: 1
          format: int32
          minimum: 1
          type: integer
      required:
      - columns
      - downstreamReference
      - level
      - upstreamReference
      type: object
    ReportReferencedRow:
      allOf:
      - $ref: '#/components/schemas/ReportRow'
      - properties:
          itemRef:
            $ref: '#/components/schemas/ReportItemReference'
          cells:
            description: Cells in a row.
            items:
              $ref: '#/components/schemas/ReportCell'
            type: array
          outlineLevel:
            description: Item's level in the tracker outline.
            format: int32
            type: integer
          references:
            $ref: '#/components/schemas/ReportReferenceLevel'
          isRealResult:
            description: Indicator if the item is a real query result (e.g. not an
              ancestor item).
            type: boolean
        type: object
      description: Result row having references.
      type: object
    ReportResult:
      description: Report data model
      example:
        cbQL: project.id IN (2) AND tracker.id IN (21323) ORDER BY priority ASC
        data:
          count: 32
          header: "Status: In progress"
          groupingValueId: 2
          aggregates:
          - average: 11.32
            columnRef: 11-1
            maximum: 21.32
            sum: 22.64
            minimum: 1.32
          - average: 11.32
            columnRef: 11-1
            maximum: 21.32
            sum: 22.64
            minimum: 1.32
          type: row
          groupingValue: In progress
        columns:
        - field: null
          name: Status
          columnRef: 12-1
          columnWidthPercentage: 16.533667
          columnIndex: 0
          type: choice
        - field: null
          name: Status
          columnRef: 12-1
          columnWidthPercentage: 16.533667
          columnIndex: 0
          type: choice
        report: null
        pagingInformation:
          pageCount: 1
          pageSize: 6
          page: 0
        showAllChildren: true
      properties:
        report:
          $ref: '#/components/schemas/ReportReference'
        cbQL:
          description: CbQL query behind the report
          example: project.id IN (2) AND tracker.id IN (21323) ORDER BY priority ASC
          type: string
        columns:
          description: Column information
          items:
            $ref: '#/components/schemas/ReportColumn'
          type: array
        pagingInformation:
          $ref: '#/components/schemas/ReportPagingInformation'
        data:
          $ref: '#/components/schemas/ReportGroup'
        showAllChildren:
          description: Indicator to ability to collapse/expand all child items.
          type: boolean
      type: object
    ReportRow:
      description: A row of the report containing cell information.
      properties:
        itemRef:
          $ref: '#/components/schemas/ReportItemReference'
        cells:
          description: Cells in a row.
          items:
            $ref: '#/components/schemas/ReportCell'
          type: array
        outlineLevel:
          description: Item's level in the tracker outline.
          format: int32
          type: integer
        isRealResult:
          description: Indicator if the item is a real query result (e.g. not an ancestor
            item).
          type: boolean
      type: object
    RepositoryChoiceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          referenceType:
            description: Type of the contained references
            type: string
        type: object
      description: Repository type choice field
      type: object
    RepositoryReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a Repository
      type: object
    ResizableReportColumnSettings:
      description: Settings for a resizeable column definition.
      example:
        field: null
        columnIndex: 0
        columnWidthPercentage: 43.2
      properties:
        field:
          $ref: '#/components/schemas/FieldReference'
        columnIndex:
          description: Index of the column in the report table.
          example: 0
          format: int32
          type: integer
        columnWidthPercentage:
          description: Width of the column in percentage.
          example: 43.2
          format: double
          type: number
      required:
      - columnIndex
      - field
      type: object
    ResourceForbiddenException:
      properties:
        message:
          type: string
        resourceUri:
          type: string
      type: object
    ResourceNotFoundException:
      properties:
        message:
          type: string
        resourceUri:
          type: string
      type: object
    ResourceUnauthorizedException:
      properties:
        message:
          type: string
        resourceUri:
          type: string
      type: object
    ReviewMemberReferenceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Project role reference field
      type: object
    Role:
      example:
        name: name
        description: description
        id: 0
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of a role
          type: string
        descriptionFormat:
          description: Format of a role's description
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
      type: object
    RoleReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a role
      type: object
    RoleWithPermissions:
      description: Model that contains permissions connected to roles
      example:
        role: null
        trackerPermissions:
        - null
        - null
      properties:
        role:
          $ref: '#/components/schemas/RoleReference'
        trackerPermissions:
          description: Permission for the role
          items:
            $ref: '#/components/schemas/TrackerPermissionReference'
          type: array
      type: object
    SimpleReportSettings:
      description: Settings for a simple report.
      example:
        showAncestors: true
        reportId: 1
        cbQl: priority='Normal'
        addedPermissions:
        - role: null
          access: READ
          project: null
        - role: null
          access: READ
          project: null
        columns:
        - field: null
          columnIndex: 0
          columnWidthPercentage: 43.2
        - field: null
          columnIndex: 0
          columnWidthPercentage: 43.2
        name: My first query
        description: Normal priority items.
        showDescendants: false
        showAllChildren: false
      properties:
        reportId:
          description: Id of a report
          example: 1
          format: int32
          type: integer
        cbQl:
          description: CbQL query string of the report.
          example: priority='Normal'
          type: string
        name:
          description: Name of the report.
          example: My first query
          type: string
        description:
          description: Description of the report.
          example: Normal priority items.
          type: string
        columns:
          description: Column definitions.
          items:
            $ref: '#/components/schemas/ResizableReportColumnSettings'
          type: array
        addedPermissions:
          description: Access permissions for the report.
          items:
            $ref: '#/components/schemas/ReportPermission'
          type: array
        showAncestors:
          description: Indicator to show the ancestors of a result item.
          example: true
          type: boolean
        showDescendants:
          description: Indicator to show the descendants of a result item.
          example: false
          type: boolean
        showAllChildren:
          description: Indicator to ability to collapse/expand all child items.
          example: false
          type: boolean
      required:
      - cbQl
      - columns
      - description
      - name
      type: object
    SystemStatus:
      description: Basic properties of system status
      example:
        systemMode: NORMAL
      properties:
        systemMode:
          description: System mode
          enum:
          - NORMAL
          - MAINTENANCE
          type: string
      type: object
    TableField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          columns:
            description: Columns of a table
            items:
              $ref: '#/components/schemas/AbstractField'
            type: array
        type: object
      description: Table field
      type: object
    TableFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          values:
            description: Table values
            items:
              description: Table values
              items:
                $ref: '#/components/schemas/AbstractFieldValue'
              type: array
            type: array
        type: object
      description: Value container of a table field
      required:
      - type
      type: object
    TestRunResult:
      description: Multiple Test Runs
      example:
        testRuns:
        - parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
        - parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
      properties:
        testRuns:
          items:
            $ref: '#/components/schemas/TrackerItem'
          type: array
      type: object
    TextField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          min:
            description: Minimum length of value of a field
            format: int32
            type: integer
          max:
            description: Max length of value of a field
            format: int32
            type: integer
        type: object
      description: Text field
      type: object
    TextFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Text value
            type: string
        type: object
      description: Value container of a text field
      required:
      - type
      - value
      type: object
    TooManyRequestsException:
      properties:
        message:
          type: string
        resourceUri:
          type: string
        retryAfterSecond:
          format: int64
          type: integer
      type: object
    TraceabilityInitialLevelFilter:
      description: Settings to filter items
      example:
        historyDate: 2000-01-23T04:56:07.000+00:00
        cbQL: cbQL
        showDescendantItems: false
        showAncestorItems: false
        historyBaselineId: 0
      properties:
        showAncestorItems:
          default: false
          description: Show ancestor items
          type: boolean
        showDescendantItems:
          default: false
          description: Show descendant items
          type: boolean
        historyDate:
          description: Snapshot view of given date
          format: date-time
          type: string
        historyBaselineId:
          description: Snapshot view of given baseline
          format: int32
          type: integer
        cbQL:
          description: cbQL
          type: string
      required:
      - cbQL
      type: object
    TraceabilityItem:
      description: Traceability Item
      example:
        outgoing association:
        - id: 0
          version: 6
        - id: 0
          version: 6
        incoming association:
        - id: 0
          version: 6
        - id: 0
          version: 6
        outgoingAssociations:
        - id: 0
          version: 6
        - id: 0
          version: 6
        children:
        - null
        - null
        itemRevision:
          id: 0
          version: 6
        outgoingReferences:
        - id: 0
          version: 6
        - id: 0
          version: 6
        outgoing reference:
        - id: 0
          version: 6
        - id: 0
          version: 6
        incoming reference:
        - id: 0
          version: 6
        - id: 0
          version: 6
        incomingAssociations:
        - id: 0
          version: 6
        - id: 0
          version: 6
        incomingReferences:
        - id: 0
          version: 6
        - id: 0
          version: 6
      properties:
        itemRevision:
          $ref: '#/components/schemas/TrackerItemRevision'
        outgoing reference:
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
          writeOnly: true
        incoming reference:
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
          writeOnly: true
        outgoing association:
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
          writeOnly: true
        incoming association:
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
          writeOnly: true
        children:
          description: children
          items:
            $ref: '#/components/schemas/TraceabilityItem'
          type: array
        outgoingReferences:
          description: outgoing reference
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
        outgoingAssociations:
          description: outgoing association
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
        incomingReferences:
          description: incoming references
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
        incomingAssociations:
          description: incoming associations
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
      type: object
    TraceabilityLevelFilter:
      description: Traceability level filter
      example:
        historyDate: 2000-01-23T04:56:07.000+00:00
        cbQL: cbQL
        incomingAssociation: true
        incomingReference: true
        outgoingReference: true
        previousLevelItems:
        - id: 0
          version: 6
        - id: 0
          version: 6
        outgoingAssociation: true
        foldersAndInformation: false
        historyBaselineId: 0
      properties:
        previousLevelItems:
          description: Previous Level Items
          items:
            $ref: '#/components/schemas/TrackerItemRevision'
          type: array
        outgoingReference:
          default: true
          description: Show outgoing references
          type: boolean
        incomingReference:
          default: true
          description: Show incoming references
          type: boolean
        outgoingAssociation:
          default: true
          description: Show outgoing association
          type: boolean
        incomingAssociation:
          default: true
          description: Show incoming association
          type: boolean
        foldersAndInformation:
          default: false
          description: Show folders and information
          type: boolean
        cbQL:
          description: cbQL
          type: string
        historyDate:
          description: History Date - Snapshot view of the given date
          format: date-time
          type: string
        historyBaselineId:
          description: History Baseline Id - Snapshot view of the given baseline
          format: int32
          type: integer
      required:
      - cbQL
      type: object
    TraceabilityResult:
      description: Traceability result
      example:
        limitWarnings: limitWarnings
        traceabilityItems:
        - outgoing association:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incoming association:
          - id: 0
            version: 6
          - id: 0
            version: 6
          outgoingAssociations:
          - id: 0
            version: 6
          - id: 0
            version: 6
          children:
          - null
          - null
          itemRevision:
            id: 0
            version: 6
          outgoingReferences:
          - id: 0
            version: 6
          - id: 0
            version: 6
          outgoing reference:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incoming reference:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incomingAssociations:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incomingReferences:
          - id: 0
            version: 6
          - id: 0
            version: 6
        - outgoing association:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incoming association:
          - id: 0
            version: 6
          - id: 0
            version: 6
          outgoingAssociations:
          - id: 0
            version: 6
          - id: 0
            version: 6
          children:
          - null
          - null
          itemRevision:
            id: 0
            version: 6
          outgoingReferences:
          - id: 0
            version: 6
          - id: 0
            version: 6
          outgoing reference:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incoming reference:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incomingAssociations:
          - id: 0
            version: 6
          - id: 0
            version: 6
          incomingReferences:
          - id: 0
            version: 6
          - id: 0
            version: 6
      properties:
        limitWarnings:
          description: limit warnings
          type: string
        traceabilityItems:
          description: traceability items
          items:
            $ref: '#/components/schemas/TraceabilityItem'
          type: array
      type: object
    Tracker:
      description: Basic properties of a codebeamer tracker
      example:
        hidden: true
        color: color
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        usingQuickTransitions: true
        keyName: keyName
        description: description
        usingWorkflow: true
        project: null
        type: null
        onlyWorkflowCanCreateNewReferringItem: true
        version: 6
        templateTracker: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        defaultShowDescendantItems: true
        deleted: true
        availableAsTemplate: true
        createdBy: null
        sharedInWorkingSet: true
        name: name
        modifiedBy: null
        id: 0
        descriptionFormat: PlainText
        defaultShowAncestorItems: true
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        keyName:
          description: Keyname of a tracker
          type: string
        version:
          description: Version of a tracker
          format: int32
          type: integer
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        type:
          $ref: '#/components/schemas/TrackerTypeReference'
        deleted:
          description: Indicator if the tracker is deleted
          type: boolean
        hidden:
          description: Indicator if the tracker is hidden
          type: boolean
        color:
          description: Color of the tracker
          type: string
        usingWorkflow:
          description: Should transitions and workflow actions be available in the
            tracker or not
          type: boolean
        onlyWorkflowCanCreateNewReferringItem:
          description: "If true, then the only way to create new referring items is\
            \ through workflow actions"
          type: boolean
        usingQuickTransitions:
          description: "If true, then every transition will be executed immediately\
            \ (if possible) without opening an editor for the item"
          type: boolean
        defaultShowAncestorItems:
          description: Default Outline should show Ancestor Items or not
          type: boolean
        defaultShowDescendantItems:
          description: Default Outline should show Descendant Items or not
          type: boolean
        project:
          $ref: '#/components/schemas/ProjectReference'
        templateTracker:
          $ref: '#/components/schemas/TrackerReference'
        availableAsTemplate:
          description: Indicator if the tracker can be used as a template
          type: boolean
        sharedInWorkingSet:
          description: If the tracker is shared in a WorkingSet
          type: boolean
      required:
      - defaultShowAncestorItems
      - defaultShowDescendantItems
      - deleted
      - hidden
      - onlyWorkflowCanCreateNewReferringItem
      - usingQuickTransitions
      - usingWorkflow
      type: object
    TrackerBaselineReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a tracker baseline
      type: object
    TrackerChoiceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          referenceType:
            description: Type of the contained references
            type: string
        type: object
      description: Tracker type choice field
      type: object
    TrackerFieldPermissions:
      description: Tracker field permissions
      example:
        fieldReference: null
        fieldPermissions:
        - permissions:
          - role: null
            field: null
            accessLevel: NONE
            project: null
          - role: null
            field: null
            accessLevel: NONE
            project: null
          status: null
        - permissions:
          - role: null
            field: null
            accessLevel: NONE
            project: null
          - role: null
            field: null
            accessLevel: NONE
            project: null
          status: null
      properties:
        fieldReference:
          $ref: '#/components/schemas/FieldReference'
        fieldPermissions:
          description: Permissions for the given field
          items:
            $ref: '#/components/schemas/TrackerFieldStatusPermissions'
          type: array
      type: object
    TrackerFieldStatusPermissions:
      description: Field permissions by role for specific status
      example:
        permissions:
        - role: null
          field: null
          accessLevel: NONE
          project: null
        - role: null
          field: null
          accessLevel: NONE
          project: null
        status: null
      properties:
        status:
          $ref: '#/components/schemas/ChoiceOptionReference'
        permissions:
          description: Access permissions by role
          items:
            $ref: '#/components/schemas/AccessPermission'
          type: array
      type: object
    TrackerFieldsStatusPermissions:
      description: All field permissions by role for specific status
      example:
        permissions:
        - fieldReference: null
          fieldPermissions:
          - permissions:
            - role: null
              field: null
              accessLevel: NONE
              project: null
            - role: null
              field: null
              accessLevel: NONE
              project: null
            status: null
          - permissions:
            - role: null
              field: null
              accessLevel: NONE
              project: null
            - role: null
              field: null
              accessLevel: NONE
              project: null
            status: null
        - fieldReference: null
          fieldPermissions:
          - permissions:
            - role: null
              field: null
              accessLevel: NONE
              project: null
            - role: null
              field: null
              accessLevel: NONE
              project: null
            status: null
          - permissions:
            - role: null
              field: null
              accessLevel: NONE
              project: null
            - role: null
              field: null
              accessLevel: NONE
              project: null
            status: null
      properties:
        permissions:
          description: Permissions
          items:
            $ref: '#/components/schemas/TrackerFieldPermissions'
          type: array
      type: object
    TrackerFilteringRequest:
      example:
        types:
        - null
        - null
        deleted: false
        hidden: false
        keyName: keyName
      properties:
        types:
          description: "List of tracker type references, to only show trackers of\
            \ these types."
          items:
            $ref: '#/components/schemas/TrackerTypeReference'
          type: array
        hidden:
          description: True to also show hidden trackers.
          example: false
          type: boolean
        deleted:
          description: True to also show removed trackers.
          example: false
          type: boolean
        keyName:
          description: Filter by project key name
          type: string
      type: object
    TrackerItem:
      description: Basic properties of a codebeamer tracker item
      example:
        parent: null
        endDate: 2000-01-23T04:56:07.000+00:00
        spentMillis: 4
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        assignedAt: 2000-01-23T04:56:07.000+00:00
        customFields:
        - name: name
          type: type
          fieldId: 9
        - name: name
          type: type
          fieldId: 9
        typeName: typeName
        description: description
        owners:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        resolutions:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        areas:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        assignedTo:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        platforms:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        createdAt: 2000-01-23T04:56:07.000+00:00
        children:
        - null
        - null
        tracker: null
        modifiedBy: null
        id: 0
        categories:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        closedAt: 2000-01-23T04:56:07.000+00:00
        storyPoints: 7
        accruedMillis: 3
        comments:
        - null
        - null
        teams:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        subjects:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        formality:
          name: name
          id: 0
          type: type
        estimatedMillis: 2
        priority:
          name: name
          id: 0
          type: type
        version: 2
        releaseMethod:
          name: name
          id: 0
          type: type
        createdBy: null
        versions:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        name: name
        descriptionFormat: PlainText
        startDate: 2000-01-23T04:56:07.000+00:00
        status:
          name: name
          id: 0
          type: type
        severities:
        - name: name
          id: 0
          type: type
        - name: name
          id: 0
          type: type
        ordinal: 7
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        parent:
          $ref: '#/components/schemas/TrackerItemReference'
        owners:
          description: Owners of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        version:
          description: Version of a tracker item
          format: int32
          readOnly: true
          type: integer
        assignedAt:
          description: Assigne date of a tracker item
          format: date-time
          readOnly: true
          type: string
        assignedTo:
          description: Assignees of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        startDate:
          description: Start date of a tracker item
          format: date-time
          type: string
        endDate:
          description: End date of a tracker item
          format: date-time
          type: string
        closedAt:
          description: Close date of a tracker item
          format: date-time
          type: string
        storyPoints:
          description: Story points of a tracker item
          format: int32
          type: integer
        tracker:
          $ref: '#/components/schemas/TrackerReference'
        children:
          description: Children of a tracker item
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          readOnly: true
          type: array
        customFields:
          description: Custom field of a tracker item
          items:
            $ref: '#/components/schemas/AbstractFieldValue'
          type: array
        priority:
          $ref: '#/components/schemas/AbstractReference'
        accruedMillis:
          description: Accrued work time of a tracker item in milliseconds
          format: int64
          readOnly: true
          type: integer
        estimatedMillis:
          description: Estimated work time of a tracker item in milliseconds
          format: int64
          type: integer
        spentMillis:
          description: Spent work time of a tracker item in milliseconds
          format: int64
          readOnly: true
          type: integer
        status:
          $ref: '#/components/schemas/AbstractReference'
        platforms:
          description: Platforms of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        categories:
          description: Categories of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        subjects:
          description: Subjects of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        resolutions:
          description: Resolutions of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        severities:
          description: Severities of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        releaseMethod:
          $ref: '#/components/schemas/AbstractReference'
        formality:
          $ref: '#/components/schemas/AbstractReference'
        teams:
          description: Teams of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        areas:
          description: Areas of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        versions:
          description: Versions of a tracker item
          items:
            $ref: '#/components/schemas/AbstractReference'
          type: array
        ordinal:
          description: Ordinal of a tracker item
          format: int32
          type: integer
        typeName:
          description: Type name of a tracker item
          type: string
        comments:
          description: Comment in the tracker item
          items:
            $ref: '#/components/schemas/CommentReference'
          readOnly: true
          type: array
      type: object
    TrackerItemAttachmentRequest:
      allOf:
      - $ref: '#/components/schemas/TrackerItemsRequest'
      - properties:
          baselineId:
            description: Baseline id to specify the versions of the tracker items.
            example: 1203
            format: int32
            type: integer
          excludeFilter:
            description: Indicator if the attachments matching the filters need to
              be excluded or not
            example: false
            type: boolean
          extensions:
            description: File extension filters.
            example:
            - docx
            - xlsx
            items:
              description: File extension filters.
              example: "[\"docx\",\"xlsx\"]"
              type: string
            type: array
          mimeTypes:
            description: File mime type filters.
            example:
            - image/png
            - application/zip
            items:
              description: File mime type filters.
              example: "[\"image/png\",\"application/zip\"]"
              type: string
            type: array
        type: object
      description: Request data to retrieve tracker item attachments.
      type: object
    TrackerItemChange:
      description: Reference to an item
      discriminator:
        propertyName: type
      example:
        newValue:
          name: name
          type: type
          fieldId: 9
        field: null
        name: name
        oldValue:
          name: name
          type: type
          fieldId: 9
        type: type
      properties:
        field:
          $ref: '#/components/schemas/FieldReference'
        name:
          description: Name of the field
          type: string
        oldValue:
          $ref: '#/components/schemas/AbstractFieldValue'
        newValue:
          $ref: '#/components/schemas/AbstractFieldValue'
        type:
          description: Change model type
          type: string
      type: object
    TrackerItemChildReference:
      description: Reference to a child item in the tracker outline.
      example:
        itemReference: null
        index: 0
      properties:
        itemReference:
          $ref: '#/components/schemas/TrackerItemReference'
        index:
          description: Ordinal in the tracker outline.
          example: 0
          format: int32
          minimum: 0
          type: integer
      required:
      - index
      - itemReference
      type: object
    TrackerItemChoiceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          referenceType:
            description: Type of the contained references
            type: string
        type: object
      description: Tracker item type choice field
      type: object
    TrackerItemField:
      example:
        readOnlyTableFields:
        - null
        - null
        editableTableFields:
        - null
        - null
        editableFields:
        - name: name
          type: type
          fieldId: 9
        - name: name
          type: type
          fieldId: 9
        readOnlyFields:
        - name: name
          type: type
          fieldId: 9
        - name: name
          type: type
          fieldId: 9
      properties:
        editableFields:
          description: Fields which can be modified
          items:
            $ref: '#/components/schemas/AbstractFieldValue'
          type: array
        readOnlyFields:
          description: Fields which are not writable in the current state
          items:
            $ref: '#/components/schemas/AbstractFieldValue'
          type: array
        editableTableFields:
          description: Table fields which can be modified
          items:
            $ref: '#/components/schemas/TableFieldValue'
          type: array
        readOnlyTableFields:
          description: Table fields which are not writable in the current state
          items:
            $ref: '#/components/schemas/TableFieldValue'
          type: array
      type: object
    TrackerItemFieldAccessibility:
      description: Accessibilities of fields
      example:
        visible: true
        field: null
        editable: true
        mandatory: true
      properties:
        field:
          $ref: '#/components/schemas/FieldReference'
        visible:
          description: Field is visible
          type: boolean
        mandatory:
          description: Field is mandatory
          type: boolean
        editable:
          description: Field is editable
          type: boolean
      type: object
    TrackerItemFieldAccessibilityList:
      example:
        fields:
        - visible: true
          field: null
          editable: true
          mandatory: true
        - visible: true
          field: null
          editable: true
          mandatory: true
      properties:
        fields:
          description: Accessibilities of fields
          items:
            $ref: '#/components/schemas/TrackerItemFieldAccessibility'
          type: array
      type: object
    TrackerItemHistory:
      description: Tracker item history containing all versions of an item.
      example:
        versions:
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          itemRevision:
            id: 0
            version: 6
          changes:
          - newValue:
              name: name
              type: type
              fieldId: 9
            field: null
            name: name
            oldValue:
              name: name
              type: type
              fieldId: 9
            type: type
          - newValue:
              name: name
              type: type
              fieldId: 9
            field: null
            name: name
            oldValue:
              name: name
              type: type
              fieldId: 9
            type: type
          modifiedBy: null
        - modifiedAt: 2000-01-23T04:56:07.000+00:00
          itemRevision:
            id: 0
            version: 6
          changes:
          - newValue:
              name: name
              type: type
              fieldId: 9
            field: null
            name: name
            oldValue:
              name: name
              type: type
              fieldId: 9
            type: type
          - newValue:
              name: name
              type: type
              fieldId: 9
            field: null
            name: name
            oldValue:
              name: name
              type: type
              fieldId: 9
            type: type
          modifiedBy: null
      properties:
        versions:
          description: List of version changes.
          items:
            $ref: '#/components/schemas/TrackerItemHistoryRevision'
          type: array
      type: object
    TrackerItemHistoryRevision:
      description: Revision history entry.
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        itemRevision:
          id: 0
          version: 6
        changes:
        - newValue:
            name: name
            type: type
            fieldId: 9
          field: null
          name: name
          oldValue:
            name: name
            type: type
            fieldId: 9
          type: type
        - newValue:
            name: name
            type: type
            fieldId: 9
          field: null
          name: name
          oldValue:
            name: name
            type: type
            fieldId: 9
          type: type
        modifiedBy: null
      properties:
        itemRevision:
          $ref: '#/components/schemas/TrackerItemRevision'
        changes:
          description: Changes happened between the previous and current revision.
          items:
            $ref: '#/components/schemas/TrackerItemChange'
          type: array
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
      type: object
    TrackerItemReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      - properties:
          referenceData:
            $ref: '#/components/schemas/TrackerItemReferenceData'
        type: object
      description: Reference to a tracker item
      type: object
    TrackerItemReferenceData:
      description: Properties of a tracker item reference
      properties:
        suspectPropagation:
          description: Type of suspect propagation
          enum:
          - DO_NOT_PROPAGATE
          - PROPAGATE
          - REVERSE
          - BIDIRECTIONAL
          type: string
      type: object
    TrackerItemReferenceSearchResult:
      description: One page of tracker item references.
      example:
        total: 1
        pageSize: 6
        page: 0
        itemRefs:
        - null
        - null
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        itemRefs:
          description: Found tracker item references
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
      type: object
    TrackerItemRelationsResult:
      description: References to a tracker item
      example:
        upstreamReferences:
        - null
        - null
        itemId:
          id: 0
          version: 6
        outgoingAssociations:
        - null
        - null
        downstreamReferences:
        - null
        - null
        incomingAssociations:
        - null
        - null
      properties:
        itemId:
          $ref: '#/components/schemas/TrackerItemRevision'
        downstreamReferences:
          description: References and associations to the item
          items:
            $ref: '#/components/schemas/DownstreamTrackerItemReference'
          type: array
        upstreamReferences:
          description: References and associations to the item
          items:
            $ref: '#/components/schemas/UpstreamTrackerItemReference'
          type: array
        incomingAssociations:
          description: References and associations to the item
          items:
            $ref: '#/components/schemas/IncomingTrackerItemAssociation'
          type: array
        outgoingAssociations:
          description: References and associations to the item
          items:
            $ref: '#/components/schemas/OutgoingTrackerItemAssociation'
          type: array
      type: object
    TrackerItemReview:
      description: A tracker item review instance including its reviewers and their
        decisions
      example:
        result: APPROVED
        reviewers:
        - decision: APPROVED
          reviewedAt: 2000-01-23T04:56:07.000+00:00
          asRole: null
          user: null
        - decision: APPROVED
          reviewedAt: 2000-01-23T04:56:07.000+00:00
          asRole: null
          user: null
        config:
          requiredApprovals: 0
          requiredSignature: NONE
          requiredRejections: 6
          roleRequired: true
        trackerItem:
          id: 0
          version: 6
      properties:
        reviewers:
          description: "List of reviewers, and their votes"
          items:
            $ref: '#/components/schemas/TrackerItemReviewVote'
          type: array
        result:
          description: Whether the review is approved or rejected
          enum:
          - APPROVED
          - REJECTED
          - UNDECIDED
          type: string
        trackerItem:
          $ref: '#/components/schemas/TrackerItemRevision'
        config:
          $ref: '#/components/schemas/TrackerItemReviewConfig'
      type: object
    TrackerItemReviewConfig:
      description: The configuration from which the review was created
      example:
        requiredApprovals: 0
        requiredSignature: NONE
        requiredRejections: 6
        roleRequired: true
      properties:
        requiredSignature:
          description: Whether the user has to provide its credentials to vote
          enum:
          - NONE
          - PASSWORD
          - USERNAME_AND_PASSWORD
          type: string
        requiredApprovals:
          description: Number of approvals after which the review is considered approved
          format: int32
          type: integer
        requiredRejections:
          description: Number of rejections after which the review is considered rejected
          format: int32
          type: integer
        roleRequired:
          description: Whether the reviewers have to chose in which of their roles
            do they want to vote
          type: boolean
      type: object
    TrackerItemReviewExport:
      description: A tracker item review instance including its reviewers and their
        decisions
      example:
        trackerItemVersion: 0
        reviewers:
        - firstName: firstName
          lastName: lastName
          decision: decision
          reviewedAt: 2000-01-23T04:56:07.000+00:00
          roleName: roleName
          userName: userName
        - firstName: firstName
          lastName: lastName
          decision: decision
          reviewedAt: 2000-01-23T04:56:07.000+00:00
          roleName: roleName
          userName: userName
      properties:
        reviewers:
          description: List of reviewers and their votes
          items:
            $ref: '#/components/schemas/TrackerItemReviewVoteExport'
          type: array
        trackerItemVersion:
          description: Version of the Tracker Item at the time of the review
          format: int32
          type: integer
      type: object
    TrackerItemReviewVote:
      description: A tracker item review instance including its reviewers and their
        decisions
      example:
        decision: APPROVED
        reviewedAt: 2000-01-23T04:56:07.000+00:00
        asRole: null
        user: null
      properties:
        user:
          $ref: '#/components/schemas/UserReference'
        asRole:
          $ref: '#/components/schemas/RoleReference'
        decision:
          description: The result of this particular vote
          enum:
          - APPROVED
          - REJECTED
          - UNDECIDED
          type: string
        reviewedAt:
          description: Date and time of the vote
          format: date-time
          type: string
      type: object
    TrackerItemReviewVoteExport:
      description: A reviewer and its vote for a particular Tracker Item Review instance
      example:
        firstName: firstName
        lastName: lastName
        decision: decision
        reviewedAt: 2000-01-23T04:56:07.000+00:00
        roleName: roleName
        userName: userName
      properties:
        userName:
          description: Username of the user who voted
          type: string
        reviewedAt:
          description: Time at when the review was performed
          format: date-time
          type: string
        decision:
          description: What the reviewer voted for
          type: string
        firstName:
          description: First name of the reviewer
          type: string
        lastName:
          description: Last name of the reviewer
          type: string
        roleName:
          description: Name of the role which the reviewer chose to use to vote
          type: string
      type: object
    TrackerItemRevision:
      description: Tracker item revision identifier
      example:
        id: 0
        version: 6
      properties:
        id:
          description: Tracker item id
          format: int32
          type: integer
        version:
          description: Tracker item version
          format: int32
          type: integer
      type: object
    TrackerItemRowChange:
      allOf:
      - $ref: '#/components/schemas/TrackerItemChange'
      - properties:
          rowNumber:
            description: Index of the changed row
            example: 0
            format: int32
            type: integer
        type: object
      description: Change item for a tracker item field row.
      type: object
    TrackerItemSearchRequest:
      example:
        pageSize: 25
        page: 1
        queryString: priority='Normal'
        baselineId: 1234
      properties:
        baselineId:
          description: Baseline on which the query is applied.
          example: 1234
          format: int32
          type: integer
        page:
          default: 1
          description: Index of the page
          example: 1
          format: int32
          type: integer
        pageSize:
          default: 25
          description: Size of the found page
          example: 25
          format: int32
          type: integer
        queryString:
          description: CbQL query for the requested items
          example: priority='Normal'
          type: string
      required:
      - queryString
      type: object
    TrackerItemSearchResult:
      description: One page of tracker items.
      example:
        total: 1
        pageSize: 6
        page: 0
        items:
        - parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
        - parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        items:
          description: Found tracker items
          items:
            $ref: '#/components/schemas/TrackerItem'
          type: array
      type: object
    TrackerItemWithTrackerItemReviewsExport:
      description: A Tracker Item with all of its corresponding Tracker Item Reviews
      example:
        trackerItemReviews:
        - trackerItemVersion: 0
          reviewers:
          - firstName: firstName
            lastName: lastName
            decision: decision
            reviewedAt: 2000-01-23T04:56:07.000+00:00
            roleName: roleName
            userName: userName
          - firstName: firstName
            lastName: lastName
            decision: decision
            reviewedAt: 2000-01-23T04:56:07.000+00:00
            roleName: roleName
            userName: userName
        - trackerItemVersion: 0
          reviewers:
          - firstName: firstName
            lastName: lastName
            decision: decision
            reviewedAt: 2000-01-23T04:56:07.000+00:00
            roleName: roleName
            userName: userName
          - firstName: firstName
            lastName: lastName
            decision: decision
            reviewedAt: 2000-01-23T04:56:07.000+00:00
            roleName: roleName
            userName: userName
        trackerItem:
          parent: null
          endDate: 2000-01-23T04:56:07.000+00:00
          spentMillis: 4
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          assignedAt: 2000-01-23T04:56:07.000+00:00
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          typeName: typeName
          description: description
          owners:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          resolutions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          areas:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          assignedTo:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          platforms:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          createdAt: 2000-01-23T04:56:07.000+00:00
          children:
          - null
          - null
          tracker: null
          modifiedBy: null
          id: 0
          categories:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          closedAt: 2000-01-23T04:56:07.000+00:00
          storyPoints: 7
          accruedMillis: 3
          comments:
          - null
          - null
          teams:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          subjects:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          formality:
            name: name
            id: 0
            type: type
          estimatedMillis: 2
          priority:
            name: name
            id: 0
            type: type
          version: 2
          releaseMethod:
            name: name
            id: 0
            type: type
          createdBy: null
          versions:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          name: name
          descriptionFormat: PlainText
          startDate: 2000-01-23T04:56:07.000+00:00
          status:
            name: name
            id: 0
            type: type
          severities:
          - name: name
            id: 0
            type: type
          - name: name
            id: 0
            type: type
          ordinal: 7
      properties:
        trackerItem:
          $ref: '#/components/schemas/TrackerItem'
        trackerItemReviews:
          description: List of Tracker Item Reviews
          items:
            $ref: '#/components/schemas/TrackerItemReviewExport'
          type: array
      type: object
    TrackerItemsRequest:
      description: Request model for multiple items.
      discriminator:
        propertyName: type
      example:
        type: type
        items:
        - null
        - null
      properties:
        items:
          description: Item references.
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
        type:
          description: Type of a ItemsRequest
          type: string
      type: object
    TrackerPermission:
      example:
        name: name
        description: description
        id: 0
        label: label
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        label:
          description: Variable name of the permission
          type: string
        description:
          description: Description of the permission
          type: string
      type: object
    TrackerPermissionReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a tracker permission
      type: object
    TrackerReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a tracker
      type: object
    TrackerReportSettings:
      description: Settings of a report on a tracker.
      example:
        showAncestors: true
        reportId: 1
        cbQl: priority='Normal'
        referenceLevelSettings:
        - referenceTrackerTypes:
          - null
          - null
          downstreamReference: false
          level: 1
          columns:
          - field: null
            columnIndex: 0
          - field: null
            columnIndex: 0
          referenceTrackers:
          - null
          - null
          upstreamReference: true
        - referenceTrackerTypes:
          - null
          - null
          downstreamReference: false
          level: 1
          columns:
          - field: null
            columnIndex: 0
          - field: null
            columnIndex: 0
          referenceTrackers:
          - null
          - null
          upstreamReference: true
        columns:
        - field: null
          columnIndex: 0
          columnWidthPercentage: 43.2
        - field: null
          columnIndex: 0
          columnWidthPercentage: 43.2
        name: My first query
        tracker: null
        renderingMethod: table
        description: Normal priority items.
        isPublic: true
        showDescendants: false
        showAllChildren: false
      properties:
        reportId:
          description: Id of a report
          example: 1
          format: int32
          type: integer
        cbQl:
          description: CbQL query string of the report.
          example: priority='Normal'
          type: string
        name:
          description: Name of the report.
          example: My first query
          type: string
        description:
          description: Description of the report.
          example: Normal priority items.
          type: string
        columns:
          description: Column definitions.
          items:
            $ref: '#/components/schemas/ResizableReportColumnSettings'
          type: array
        showAncestors:
          description: Indicator to show the ancestors of a result item.
          example: true
          type: boolean
        showDescendants:
          description: Indicator to show the descendants of a result item.
          example: false
          type: boolean
        showAllChildren:
          description: Indicator to ability to collapse/expand all child items.
          example: false
          type: boolean
        tracker:
          $ref: '#/components/schemas/TrackerReference'
        isPublic:
          description: Public report indicator.
          example: true
          type: boolean
        renderingMethod:
          description: Rendering method for Intelligent Table View.
          enum:
          - disabled
          - table
          - tree
          example: table
          type: string
        referenceLevelSettings:
          description: Reference level setting for Intelligent Table View.
          items:
            $ref: '#/components/schemas/ReportReferenceLevelSettings'
          type: array
      required:
      - cbQl
      - columns
      - description
      - isPublic
      - name
      - tracker
      type: object
    TrackerSearchResult:
      description: One page of trackers.
      example:
        trackers:
        - hidden: true
          color: color
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          usingQuickTransitions: true
          keyName: keyName
          description: description
          usingWorkflow: true
          project: null
          type: null
          onlyWorkflowCanCreateNewReferringItem: true
          version: 6
          templateTracker: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          defaultShowDescendantItems: true
          deleted: true
          availableAsTemplate: true
          createdBy: null
          sharedInWorkingSet: true
          name: name
          modifiedBy: null
          id: 0
          descriptionFormat: PlainText
          defaultShowAncestorItems: true
        - hidden: true
          color: color
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          usingQuickTransitions: true
          keyName: keyName
          description: description
          usingWorkflow: true
          project: null
          type: null
          onlyWorkflowCanCreateNewReferringItem: true
          version: 6
          templateTracker: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          defaultShowDescendantItems: true
          deleted: true
          availableAsTemplate: true
          createdBy: null
          sharedInWorkingSet: true
          name: name
          modifiedBy: null
          id: 0
          descriptionFormat: PlainText
          defaultShowAncestorItems: true
        total: 1
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        trackers:
          description: Found tracker items
          items:
            $ref: '#/components/schemas/Tracker'
          type: array
      type: object
    TrackerType:
      example:
        branchable: true
        varName: varName
        outline: true
        color: color
        editorUrl: editorUrl
        name: name
        trackerIconUrl: trackerIconUrl
        itemIconUrl: itemIconUrl
        urlLinkFormat: urlLinkFormat
        docEditView: true
        id: 0
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        varName:
          description: Internal/variable name of a tracker type
          type: string
        trackerIconUrl:
          description: Tracker icon URL of a tracker type
          type: string
        itemIconUrl:
          description: Item icon URL of a tracker type
          type: string
        color:
          description: Color of a tracker type
          type: string
        outline:
          description: True if outline is enabled
          type: boolean
        branchable:
          description: True if tracker type is branchable
          type: boolean
        docEditView:
          description: True if tracker type has document view
          type: boolean
        editorUrl:
          description: Editor URL of a tracker type
          type: string
        urlLinkFormat:
          description: URL link format of a tracker type
          type: string
      type: object
    TrackerTypeReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a tracker type
      type: object
    UpdateAttachment:
      properties:
        description:
          description: Description
          type: string
        descriptionFormat:
          default: PlainText
          description: Format of description
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        content:
          description: Content of attachment
          format: binary
          type: string
      type: object
    UpdateTestCaseRunRequest:
      description: Request model to update Test Run's result for a Test Case
      example:
        result: PASSED
        conclusion: conclusion
        customFields:
        - name: name
          type: type
          fieldId: 9
        - name: name
          type: type
          fieldId: 9
        reportedBugReferences:
        - null
        - null
        testCaseReference: null
        runTime: 0
      properties:
        testCaseReference:
          $ref: '#/components/schemas/TrackerItemReference'
        result:
          description: Result of the test case
          enum:
          - PASSED
          - FAILED
          - BLOCKED
          type: string
        conclusion:
          description: Optional conclusion text
          type: string
        runTime:
          description: Optional runtime in seconds
          format: int32
          type: integer
        reportedBugReferences:
          description: Optional reference list of Bugs attached to the Test result
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
        customFields:
          description: Optional field values to set on the Test Run
          items:
            $ref: '#/components/schemas/AbstractFieldValue'
          type: array
      required:
      - result
      - testCaseReference
      type: object
    UpdateTestRunRequest:
      description: Model to contain Test Case run update request models
      example:
        updateRequestModels:
        - result: PASSED
          conclusion: conclusion
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          reportedBugReferences:
          - null
          - null
          testCaseReference: null
          runTime: 0
        - result: PASSED
          conclusion: conclusion
          customFields:
          - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
          reportedBugReferences:
          - null
          - null
          testCaseReference: null
          runTime: 0
        parentResultPropagation: true
      properties:
        updateRequestModels:
          description: List of update Test Case run request models
          items:
            $ref: '#/components/schemas/UpdateTestCaseRunRequest'
          type: array
        parentResultPropagation:
          default: true
          description: The propagation of the result is enabled for parent Test Run
            or not
          type: boolean
      required:
      - updateRequestModels
      type: object
    UpdateTrackerItemChildrenRequest:
      description: Tracker item child update request
      example:
        children:
        - null
        - null
      properties:
        children:
          description: Child items to update
          items:
            $ref: '#/components/schemas/TrackerItemReference'
          type: array
      type: object
    UpdateTrackerItemField:
      description: Update fields of a tracker item
      example:
        tableValues:
        - null
        - null
        fieldValues:
        - name: name
          type: type
          fieldId: 9
        - name: name
          type: type
          fieldId: 9
      properties:
        fieldValues:
          description: Fields of a tracker item
          items:
            $ref: '#/components/schemas/AbstractFieldValue'
          type: array
        tableValues:
          description: Fields of a tracker item
          items:
            $ref: '#/components/schemas/TableFieldValue'
          type: array
      type: object
    UpdateTrackerItemFieldWithItemId:
      description: Update fields of a tracker item and provide the itemId as well
      example:
        itemId: 0
        tableValues:
        - null
        - null
        fieldValues:
        - name: name
          type: type
          fieldId: 9
        - name: name
          type: type
          fieldId: 9
      properties:
        fieldValues:
          description: Fields of a tracker item
          items:
            $ref: '#/components/schemas/AbstractFieldValue'
          type: array
        tableValues:
          description: Fields of a tracker item
          items:
            $ref: '#/components/schemas/TableFieldValue'
          type: array
        itemId:
          description: Id of a tracker item
          format: int32
          type: integer
      type: object
    UpdateTrackerItemTableField:
      example:
        rows:
        - - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
        - - name: name
            type: type
            fieldId: 9
          - name: name
            type: type
            fieldId: 9
      properties:
        rows:
          description: Table rows of a tracker table item
          items:
            description: Table rows of a tracker table item
            items:
              $ref: '#/components/schemas/AbstractFieldValue'
            type: array
          type: array
      type: object
    UploadAttachment:
      properties:
        attachments:
          description: Attachments of a comment
          format: binary
          type: string
      type: object
    UpstreamTrackerItemReference:
      allOf:
      - $ref: '#/components/schemas/AbstractTrackerItemReference'
      description: Reference to other tracker item
      type: object
    UrlField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      description: Url field
      type: object
    UrlFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Value of the field
            type: string
        type: object
      description: Value container of an url field
      required:
      - type
      type: object
    User:
      description: Properties of a codebeamer user
      example:
        zip: zip
        lastName: lastName
        country: country
        address: address
        city: city
        dateFormat: dateFormat
        timeZone: America/New_York
        language: language
        registryDate: 2000-01-23T04:56:07.000+00:00
        lastLoginDate: 2000-01-23T04:56:07.000+00:00
        title: title
        skills: skills
        firstName: firstName
        phone: phone
        name: name
        company: company
        id: 0
        state: state
        email: email
        status: ACTIVATED
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        firstName:
          description: First name of a user
          type: string
        lastName:
          description: Last name of a user
          type: string
        email:
          description: Email of a user
          type: string
        title:
          description: Title of a user
          type: string
        company:
          description: Company of a user
          type: string
        address:
          description: Address of a user
          type: string
        zip:
          description: Zip of a user
          type: string
        city:
          description: City of a user
          type: string
        state:
          description: State / providence of a user
          type: string
        country:
          description: Country of a user in ISO 3166-1 alpha-2 format
          maxLength: 2
          type: string
        dateFormat:
          description: Date format of a user
          type: string
        timeZone:
          description: Time zone of a user
          example: America/New_York
          type: string
        language:
          description: Language of a user in ISO 639-1 format
          maxLength: 2
          type: string
        phone:
          description: Phone number of a user
          type: string
        skills:
          description: Skills of a user
          type: string
        registryDate:
          description: Registration date of a user
          format: date-time
          type: string
        lastLoginDate:
          description: Last login date of a user
          format: date-time
          type: string
        status:
          description: Status of a user
          enum:
          - ACTIVATED
          - DISABLED
          - INACTIVATION
          type: string
      type: object
    UserChoiceField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          multipleValues:
            description: Multiple values state of a field
            type: boolean
          referenceType:
            description: Type of the contained references
            type: string
        type: object
      description: User item type choice field
      type: object
    UserFilteringRequest:
      example:
        lastName: Doe
        firstName: John
        userStatus: ACTIVATED
        name: John Doe
        projectId: 0
        email: john.doe@codebeamer.com
      properties:
        name:
          description: Name of the user
          example: John Doe
          type: string
        lastName:
          description: Last name of the user
          example: Doe
          type: string
        firstName:
          description: First name of the user
          example: John
          type: string
        email:
          description: Email of the user
          example: john.doe@codebeamer.com
          type: string
        projectId:
          description: Id of the project where the user is a member
          format: int32
          type: integer
        userStatus:
          description: Status of the user
          enum:
          - ACTIVATED
          - DISABLED
          - INACTIVATION
          type: string
      type: object
    UserGroup:
      description: Group of a codebeamer user
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        modifiedBy: null
        id: 0
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of a user group
          type: string
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
      type: object
    UserGroupReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a user group
      type: object
    UserReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      - properties:
          email:
            description: Email of a referenced user
            type: string
        type: object
      description: Reference to a user
      type: object
    UserReferenceSearchResult:
      description: Paginated search result of users
      example:
        total: 1
        pageSize: 6
        page: 0
        users:
        - null
        - null
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        users:
          description: Found users
          items:
            $ref: '#/components/schemas/UserReference'
          type: array
      type: object
    UserSearchResult:
      description: Paginated search result of users
      example:
        total: 1
        pageSize: 6
        page: 0
        users:
        - zip: zip
          lastName: lastName
          country: country
          address: address
          city: city
          dateFormat: dateFormat
          timeZone: America/New_York
          language: language
          registryDate: 2000-01-23T04:56:07.000+00:00
          lastLoginDate: 2000-01-23T04:56:07.000+00:00
          title: title
          skills: skills
          firstName: firstName
          phone: phone
          name: name
          company: company
          id: 0
          state: state
          email: email
          status: ACTIVATED
        - zip: zip
          lastName: lastName
          country: country
          address: address
          city: city
          dateFormat: dateFormat
          timeZone: America/New_York
          language: language
          registryDate: 2000-01-23T04:56:07.000+00:00
          lastLoginDate: 2000-01-23T04:56:07.000+00:00
          title: title
          skills: skills
          firstName: firstName
          phone: phone
          name: name
          company: company
          id: 0
          state: state
          email: email
          status: ACTIVATED
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        users:
          description: Found users
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    View:
      properties:
        contentType:
          type: string
      type: object
    WikiOutlineSearchResult:
      description: Paginated search result of outline wiki pages
      example:
        total: 1
        outlineWikiPages:
        - null
        - null
        pageSize: 6
        page: 0
      properties:
        page:
          description: Index of the page
          format: int32
          type: integer
        pageSize:
          description: Size of the found page
          format: int32
          type: integer
        total:
          description: Number of matched tracker items by the search criteria
          format: int32
          type: integer
        outlineWikiPages:
          description: Found outline wiki pages
          items:
            $ref: '#/components/schemas/OutlineWiki'
          type: array
      type: object
    WikiPage:
      description: Properties of a wiki page
      example:
        childPages:
        - null
        - null
        parent:
          name: name
          id: 0
          type: type
        comments:
        - null
        - null
        markup: markup
        changeComment: changeComment
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        project: null
        version: 6
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: null
        name: name
        modifiedBy: null
        id: 0
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        project:
          $ref: '#/components/schemas/ProjectReference'
        markup:
          description: Content markup of the wiki page
          type: string
        comments:
          description: Comments/attachments associated with the wiki page
          items:
            $ref: '#/components/schemas/AttachmentReference'
          type: array
        version:
          description: Version of the wiki page
          format: int32
          type: integer
        changeComment:
          description: Summary of the changes in this wiki page version
          type: string
        childPages:
          description: Child pages of the current Wiki page
          items:
            $ref: '#/components/schemas/WikiPageReference'
          readOnly: true
          type: array
        createdAt:
          description: The date when the entity was created
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/UserReference'
        modifiedAt:
          description: The date when the entity was modified
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserReference'
        parent:
          $ref: '#/components/schemas/AbstractReference'
      type: object
    WikiPageReference:
      allOf:
      - $ref: '#/components/schemas/AbstractReference'
      description: Reference to a wiki page
      type: object
    WikiRenderRequest:
      description: Request model to render a wiki page in a specific context
      example:
        renderingContextType: TRACKER_ITEM
        markup: Hello __World__!
        contextVersion: 6
        contextId: 0
      properties:
        contextId:
          description: Id of the entity used as rendering context
          format: int32
          type: integer
        contextVersion:
          description: Version of the entity used as rendering context
          format: int32
          type: integer
        renderingContextType:
          description: Type of the entity used as rendering context
          enum:
          - TRACKER_ITEM
          - WIKI
          type: string
        markup:
          description: Wiki markup to render as HTML
          example: Hello __World__!
          type: string
      required:
      - markup
      type: object
    WikiTextField:
      allOf:
      - $ref: '#/components/schemas/AbstractField'
      - properties:
          min:
            description: Minimum length of value of a field
            format: int32
            type: integer
          max:
            description: Max length of value of a field
            format: int32
            type: integer
        type: object
      description: Wiki text field
      type: object
    WikiTextFieldValue:
      allOf:
      - $ref: '#/components/schemas/AbstractFieldValue'
      - properties:
          value:
            description: Wiki text value
            type: string
        type: object
      description: Value container of a wiki text field
      required:
      - type
      - value
      type: object
    WorkflowTransition:
      description: A transition in the workflow
      example:
        toStatus: null
        fromStatus: null
        hidden: true
        permissions:
        - role: null
          field: null
          accessLevel: NONE
          project: null
        - role: null
          field: null
          accessLevel: NONE
          project: null
        name: name
        description: description
        id: 0
        descriptionFormat: PlainText
      properties:
        id:
          description: Id of the entity
          format: int32
          minimum: 0
          type: integer
        name:
          description: Name of the entity
          type: string
        description:
          description: Description of the entity
          type: string
        descriptionFormat:
          description: Description format of the entity
          enum:
          - PlainText
          - Html
          - Wiki
          type: string
        fromStatus:
          $ref: '#/components/schemas/ChoiceOptionReference'
        toStatus:
          $ref: '#/components/schemas/ChoiceOptionReference'
        hidden:
          description: Indicator if the transition is hidden
          type: boolean
        permissions:
          description: Access permissions of the transition
          items:
            $ref: '#/components/schemas/AccessPermission'
          type: array
      required:
      - toStatus
      type: object
    updateTrackerIcon_request:
      properties:
        icon:
          format: binary
          type: string
      type: object
    ModelAndView_modelMap:
      additionalProperties:
        type: object
      properties:
        empty:
          type: boolean
      type: object
  securitySchemes:
    BasicAuth:
      description: Please use your username and password
      scheme: basic
      type: http
    BearerAuth:
      bearerFormat: JWT
      description: Please login using your openId token
      scheme: bearer
      type: http
    ApiKeyAuth:
      description: Please login using your codebeamer token
      in: header
      name: Authorization
      type: apiKey

